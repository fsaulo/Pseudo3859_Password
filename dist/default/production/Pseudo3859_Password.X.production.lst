

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Nov 16 02:25:11 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK0
   217  03BA                     __pidataBANK0:
   218                           
   219                           ;initializer for bcd_output@F1368
   220  03BA  3418               	retlw	24
   221  03BB  347F               	retlw	127
   222  03BC  347F               	retlw	127
   223  03BD  347F               	retlw	127
   224                           
   225                           ;initializer for bcd_output@F1366
   226  03BE  3401               	retlw	1
   227  03BF  347A               	retlw	122
   228  03C0  347A               	retlw	122
   229  03C1  3430               	retlw	48
   230                           
   231                           ;initializer for chk_passwd@F1328
   232  03C2  3409               	retlw	9
   233  03C3  3405               	retlw	5
   234  03C4  3408               	retlw	8
   235  03C5  3403               	retlw	3
   236                           
   237                           ;initializer for main@F1323
   238  03C6  340A               	retlw	10
   239  03C7  340A               	retlw	10
   240  03C8  340A               	retlw	10
   241  03C9  340A               	retlw	10
   242                           
   243                           	psect	idataBANK1
   244  0425                     __pidataBANK1:
   245                           
   246                           ;initializer for bcd_output@F1364
   247  0425  3418               	retlw	24
   248  0426  344F               	retlw	79
   249  0427  3431               	retlw	49
   250  0428  344F               	retlw	79
   251  0429  3420               	retlw	32
   252  042A  3438               	retlw	56
   253  042B  3400               	retlw	0
   254  042C  3400               	retlw	0
   255  042D  340F               	retlw	15
   256  042E  347F               	retlw	127
   257  042F  347F               	retlw	127
   258  0430  347F               	retlw	127
   259                           
   260                           ;initializer for bcd_output@F1362
   261  0431  3401               	retlw	1
   262  0432  344F               	retlw	79
   263  0433  3412               	retlw	18
   264  0434  3406               	retlw	6
   265  0435  344C               	retlw	76
   266  0436  3424               	retlw	36
   267  0437  3420               	retlw	32
   268  0438  340F               	retlw	15
   269  0439  3400               	retlw	0
   270  043A  3404               	retlw	4
   271  043B  34FE               	retlw	254
   272  043C  347E               	retlw	126
   273  0007                     _PORTCbits	set	7
   274  0008                     _PORTDbits	set	8
   275  0006                     _PORTB	set	6
   276  0088                     _TRISDbits	set	136
   277  0087                     _TRISCbits	set	135
   278  0088                     _TRISD	set	136
   279  0086                     _TRISB	set	134
   280  0847                     _C2ON	set	2119
   281  083F                     _C1ON	set	2111
   282  0189                     _ANSELH	set	393
   283  0188                     _ANSEL	set	392
   284                           
   285                           	psect	cinit
   286  07E1                     start_initialization:	
   287                           ; #config settings
   288                           
   289  07E1                     __initialization:
   290                           
   291                           ; Initialize objects allocated to BANK1
   292  07E1  1383               	bcf	3,7	;select IRP bank0
   293  07E2  30B8               	movlw	low (__pdataBANK1+24)
   294  07E3  00FD               	movwf	btemp+-1
   295  07E4  3004               	movlw	high __pidataBANK1
   296  07E5  00FE               	movwf	btemp
   297  07E6  3025               	movlw	low __pidataBANK1
   298  07E7  00FF               	movwf	btemp+1
   299  07E8  30A0               	movlw	low __pdataBANK1
   300  07E9  0084               	movwf	4
   301  07EA  120A  118A  23CE  120A  118A  	fcall	init_ram0
   302                           
   303                           ; Initialize objects allocated to BANK0
   304  07EF  3068               	movlw	low (__pdataBANK0+16)
   305  07F0  00FD               	movwf	btemp+-1
   306  07F1  3003               	movlw	high __pidataBANK0
   307  07F2  00FE               	movwf	btemp
   308  07F3  30BA               	movlw	low __pidataBANK0
   309  07F4  00FF               	movwf	btemp+1
   310  07F5  3058               	movlw	low __pdataBANK0
   311  07F6  0084               	movwf	4
   312  07F7  120A  118A  23CE  120A  118A  	fcall	init_ram0
   313  07FC                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  07FC                     __end_of__initialization:
   317  07FC  0183               	clrf	3
   318  07FD  120A  118A  2CC8   	ljmp	_main	;jump to C main() function
   319                           
   320                           	psect	dataBANK0
   321  0058                     __pdataBANK0:
   322  0058                     bcd_output@F1368:
   323  0058                     	ds	4
   324  005C                     bcd_output@F1366:
   325  005C                     	ds	4
   326  0060                     chk_passwd@F1328:
   327  0060                     	ds	4
   328  0064                     main@F1323:
   329  0064                     	ds	4
   330                           
   331                           	psect	dataBANK1
   332  00A0                     __pdataBANK1:
   333  00A0                     bcd_output@F1364:
   334  00A0                     	ds	12
   335  00AC                     bcd_output@F1362:
   336  00AC                     	ds	12
   337                           
   338                           	psect	inittext
   339  03CA                     init_fetch0:	
   340                           ;	Called with low address in FSR and high address in W
   341                           
   342  03CA  087E               	movf	btemp,w
   343  03CB  008A               	movwf	10
   344  03CC  087F               	movf	btemp+1,w
   345  03CD  0082               	movwf	2
   346  03CE                     init_ram0:	
   347                           ;Called with:
   348                           ;	high address of idata address in btemp 
   349                           ;	low address of idata address in btemp+1 
   350                           ;	low address of data in FSR
   351                           ;	high address + 1 of data in btemp-1
   352                           
   353  03CE  120A  118A  23CA  120A  118A  	fcall	init_fetch0
   354  03D3  0080               	movwf	0
   355  03D4  0A84               	incf	4,f
   356  03D5  0804               	movf	4,w
   357  03D6  067D               	xorwf	btemp+-1,w
   358  03D7  1903               	btfsc	3,2
   359  03D8  3400               	retlw	0
   360  03D9  0AFF               	incf	btemp+1,f
   361  03DA  1903               	btfsc	3,2
   362  03DB  0AFE               	incf	btemp,f
   363  03DC  2BCE               	goto	init_ram0
   364                           
   365                           	psect	cstackCOMMON
   366  0070                     __pcstackCOMMON:
   367  0070                     ?_disp_success:
   368  0070                     ??_disp_success:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_disp_error:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_disp_error:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_mux_display:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_mux_display:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_key_fwd:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_clearreg:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_clearreg:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_cdisplay:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??_cdisplay:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_main:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     key_fwd@pos:	
   402                           ; 2 bytes @ 0x0
   403                           
   404  0070                     mux_display@pdisp:	
   405                           ; 1 bytes @ 0x0
   406                           
   407                           
   408                           ; 1 bytes @ 0x0
   409  0070                     	ds	1
   410  0071                     ?_bcd_output:
   411  0071                     ??_key_fwd:	
   412                           ; 1 bytes @ 0x1
   413                           
   414  0071                     disp_success@breg:	
   415                           ; 1 bytes @ 0x1
   416                           
   417  0071                     disp_error@breg:	
   418                           ; 1 bytes @ 0x1
   419                           
   420  0071                     clearreg@breg:	
   421                           ; 1 bytes @ 0x1
   422                           
   423  0071                     bcd_output@cwait:	
   424                           ; 1 bytes @ 0x1
   425                           
   426                           
   427                           ; 1 bytes @ 0x1
   428  0071                     	ds	1
   429  0072                     disp_success@i:
   430  0072                     disp_error@i:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     clearreg@i:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     bcd_output@preg:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 1 bytes @ 0x2
   441  0072                     	ds	1
   442  0073                     ?_chk_passwd:
   443  0073                     chk_passwd@preg:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     key_fwd@bus:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     bcd_output@pit:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 1 bytes @ 0x3
   454  0073                     	ds	1
   455  0074                     ??_bcd_output:
   456  0074                     ?_iohandler:	
   457                           ; 1 bytes @ 0x4
   458                           
   459  0074                     ??_chk_passwd:	
   460                           ; 1 bytes @ 0x4
   461                           
   462  0074                     iohandler@preg:	
   463                           ; 1 bytes @ 0x4
   464                           
   465                           
   466                           ; 1 bytes @ 0x4
   467  0074                     	ds	1
   468  0075                     iohandler@nreg:
   469                           
   470                           ; 1 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     iohandler@flag:
   473  0076                     chk_passwd@passwd:	
   474                           ; 1 bytes @ 0x6
   475                           
   476                           
   477                           ; 4 bytes @ 0x6
   478  0076                     	ds	1
   479  0077                     ??_iohandler:
   480                           
   481                           ; 1 bytes @ 0x7
   482  0077                     	ds	3
   483  007A                     chk_passwd@breg:
   484                           
   485                           ; 1 bytes @ 0xA
   486  007A                     	ds	1
   487  007B                     chk_passwd@i:
   488                           
   489                           ; 1 bytes @ 0xB
   490  007B                     	ds	1
   491                           
   492                           	psect	cstackBANK0
   493  0020                     __pcstackBANK0:
   494  0020                     _iohandler$228:
   495  0020                     bcd_output@num_bcd_7seg:	
   496                           ; 2 bytes @ 0x0
   497                           
   498                           
   499                           ; 12 bytes @ 0x0
   500  0020                     	ds	2
   501  0022                     _iohandler$229:
   502                           
   503                           ; 2 bytes @ 0x2
   504  0022                     	ds	2
   505  0024                     iohandler@bus:
   506                           
   507                           ; 1 bytes @ 0x4
   508  0024                     	ds	1
   509  0025                     iohandler@pp:
   510                           
   511                           ; 1 bytes @ 0x5
   512  0025                     	ds	7
   513  002C                     bcd_output@num_pass_7seg:
   514                           
   515                           ; 12 bytes @ 0xC
   516  002C                     	ds	12
   517  0038                     bcd_output@num_erro_7seg:
   518                           
   519                           ; 4 bytes @ 0x18
   520  0038                     	ds	4
   521  003C                     bcd_output@aux_bus:
   522                           
   523                           ; 4 bytes @ 0x1C
   524  003C                     	ds	4
   525  0040                     bcd_output@func:
   526                           
   527                           ; 1 bytes @ 0x20
   528  0040                     	ds	1
   529  0041                     bcd_output@pr:
   530                           
   531                           ; 1 bytes @ 0x21
   532  0041                     	ds	1
   533  0042                     bcd_output@value:
   534                           
   535                           ; 1 bytes @ 0x22
   536  0042                     	ds	1
   537  0043                     bcd_output@sbus:
   538                           
   539                           ; 2 bytes @ 0x23
   540  0043                     	ds	2
   541  0045                     bcd_output@t:
   542                           
   543                           ; 1 bytes @ 0x25
   544  0045                     	ds	1
   545  0046                     bcd_output@li:
   546                           
   547                           ; 1 bytes @ 0x26
   548  0046                     	ds	1
   549  0047                     bcd_output@pdisp:
   550                           
   551                           ; 1 bytes @ 0x27
   552  0047                     	ds	1
   553  0048                     ??_main:
   554                           
   555                           ; 1 bytes @ 0x28
   556  0048                     	ds	3
   557  004B                     _main$192:
   558                           
   559                           ; 2 bytes @ 0x2B
   560  004B                     	ds	2
   561  004D                     _main$193:
   562                           
   563                           ; 2 bytes @ 0x2D
   564  004D                     	ds	2
   565  004F                     main@bus_register:
   566                           
   567                           ; 4 bytes @ 0x2F
   568  004F                     	ds	4
   569  0053                     main@pit:
   570                           
   571                           ; 1 bytes @ 0x33
   572  0053                     	ds	1
   573  0054                     main@ccall:
   574                           
   575                           ; 1 bytes @ 0x34
   576  0054                     	ds	1
   577  0055                     main@nreg:
   578                           
   579                           ; 1 bytes @ 0x35
   580  0055                     	ds	1
   581  0056                     main@flag:
   582                           
   583                           ; 1 bytes @ 0x36
   584  0056                     	ds	1
   585  0057                     main@preg:
   586                           
   587                           ; 1 bytes @ 0x37
   588  0057                     	ds	1
   589                           
   590                           	psect	maintext
   591  04C8                     __pmaintext:	
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 76 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  bus_register    4   47[BANK0 ] unsigned char [4]
   602 ;;  preg            1   55[BANK0 ] unsigned char 
   603 ;;  flag            1   54[BANK0 ] unsigned char 
   604 ;;  nreg            1   53[BANK0 ] unsigned char 
   605 ;;  ccall           1   52[BANK0 ] unsigned char 
   606 ;;  pit             1   51[BANK0 ] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  2   40[None  ] int 
   609 ;; Registers used:
   610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : B00/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0      13       0       0       0
   618 ;;      Temps:          0       3       0       0       0
   619 ;;      Totals:         0      16       0       0       0
   620 ;;Total ram usage:       16 bytes
   621 ;; Hardware stack levels required when called:    2
   622 ;; This function calls:
   623 ;;		_bcd_output
   624 ;;		_chk_passwd
   625 ;;		_iohandler
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _main
   633  04C8                     _main:
   634  04C8                     l1429:	
   635                           ;incstack = 0
   636                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   637                           
   638                           
   639                           ;main.c: 78: ANSEL = 0;
   640  04C8  1683               	bsf	3,5	;RP0=1, select bank3
   641  04C9  1703               	bsf	3,6	;RP1=1, select bank3
   642  04CA  0188               	clrf	8	;volatile
   643                           
   644                           ;main.c: 79: ANSELH = 0;
   645  04CB  0189               	clrf	9	;volatile
   646                           
   647                           ;main.c: 80: TRISB = 0;
   648  04CC  1683               	bsf	3,5	;RP0=1, select bank1
   649  04CD  1303               	bcf	3,6	;RP1=0, select bank1
   650  04CE  0186               	clrf	6	;volatile
   651                           
   652                           ;main.c: 81: TRISD = 0;
   653  04CF  0188               	clrf	8	;volatile
   654                           
   655                           ;main.c: 82: PORTB = 0;
   656  04D0  1283               	bcf	3,5	;RP0=0, select bank0
   657  04D1  1303               	bcf	3,6	;RP1=0, select bank0
   658  04D2  0186               	clrf	6	;volatile
   659  04D3                     l1431:
   660                           
   661                           ;main.c: 83: C1ON = 0;
   662  04D3  1283               	bcf	3,5	;RP0=0, select bank2
   663  04D4  1703               	bsf	3,6	;RP1=1, select bank2
   664  04D5  1387               	bcf	7,7	;volatile
   665  04D6                     l1433:
   666                           
   667                           ;main.c: 84: C2ON = 0;
   668  04D6  1388               	bcf	8,7	;volatile
   669  04D7                     l1435:
   670                           
   671                           ;main.c: 86: TRISCbits.TRISC0 = 1;
   672  04D7  1683               	bsf	3,5	;RP0=1, select bank1
   673  04D8  1303               	bcf	3,6	;RP1=0, select bank1
   674  04D9  1407               	bsf	7,0	;volatile
   675  04DA                     l1437:
   676                           
   677                           ;main.c: 87: TRISCbits.TRISC1 = 1;
   678  04DA  1487               	bsf	7,1	;volatile
   679  04DB                     l1439:
   680                           
   681                           ;main.c: 88: TRISCbits.TRISC2 = 1;
   682  04DB  1507               	bsf	7,2	;volatile
   683  04DC                     l1441:
   684                           
   685                           ;main.c: 89: TRISCbits.TRISC3 = 1;
   686  04DC  1587               	bsf	7,3	;volatile
   687  04DD                     l1443:
   688                           
   689                           ;main.c: 90: TRISDbits.TRISD0 = 1;
   690  04DD  1408               	bsf	8,0	;volatile
   691  04DE                     l1445:
   692                           
   693                           ;main.c: 92: uint8_t pit = 200;
   694  04DE  30C8               	movlw	200
   695  04DF  1283               	bcf	3,5	;RP0=0, select bank0
   696  04E0  1303               	bcf	3,6	;RP1=0, select bank0
   697  04E1  00C8               	movwf	??_main
   698  04E2  0848               	movf	??_main,w
   699  04E3  00D3               	movwf	main@pit
   700  04E4                     l1447:
   701                           
   702                           ;main.c: 93: uint8_t ccall = 0;
   703  04E4  01D4               	clrf	main@ccall
   704  04E5                     l1449:
   705                           
   706                           ;main.c: 94: uint8_t preg = 0;
   707  04E5  01D7               	clrf	main@preg
   708  04E6                     l1451:
   709                           
   710                           ;main.c: 95: uint8_t nreg = 0;
   711  04E6  01D5               	clrf	main@nreg
   712  04E7                     l1453:
   713                           
   714                           ;main.c: 96: uint8_t flag = 1;
   715  04E7  01D6               	clrf	main@flag
   716  04E8  0AD6               	incf	main@flag,f
   717                           
   718                           ;main.c: 99: uint8_t bus_register[4] = {0x0A, 0x0A, 0x0A, 0x0A};
   719  04E9  0867               	movf	main@F1323+3,w
   720  04EA  00D2               	movwf	main@bus_register+3
   721  04EB  0866               	movf	main@F1323+2,w
   722  04EC  00D1               	movwf	main@bus_register+2
   723  04ED  0865               	movf	main@F1323+1,w
   724  04EE  00D0               	movwf	main@bus_register+1
   725  04EF  0864               	movf	main@F1323,w
   726  04F0  00CF               	movwf	main@bus_register
   727  04F1                     l1455:
   728                           
   729                           ;main.c: 103: bcd_output(bus_register, ccall, preg, pit);
   730  04F1  0854               	movf	main@ccall,w
   731  04F2  00C8               	movwf	??_main
   732  04F3  0848               	movf	??_main,w
   733  04F4  00F1               	movwf	bcd_output@cwait
   734  04F5  0857               	movf	main@preg,w
   735  04F6  00C9               	movwf	??_main+1
   736  04F7  0849               	movf	??_main+1,w
   737  04F8  00F2               	movwf	bcd_output@preg
   738  04F9  0853               	movf	main@pit,w
   739  04FA  00CA               	movwf	??_main+2
   740  04FB  084A               	movf	??_main+2,w
   741  04FC  00F3               	movwf	bcd_output@pit
   742  04FD  304F               	movlw	(low (main@bus_register| 0))& (0+255)
   743  04FE  120A  118A  268F  120A  118A  	fcall	_bcd_output
   744  0503                     l1457:
   745                           
   746                           ;main.c: 106: iohandler(bus_register, &preg, &nreg, &flag);
   747  0503  3057               	movlw	(low (main@preg| 0))& (0+255)
   748  0504  1283               	bcf	3,5	;RP0=0, select bank0
   749  0505  1303               	bcf	3,6	;RP1=0, select bank0
   750  0506  00C8               	movwf	??_main
   751  0507  0848               	movf	??_main,w
   752  0508  00F4               	movwf	iohandler@preg
   753  0509  3055               	movlw	(low (main@nreg| 0))& (0+255)
   754  050A  00C9               	movwf	??_main+1
   755  050B  0849               	movf	??_main+1,w
   756  050C  00F5               	movwf	iohandler@nreg
   757  050D  3056               	movlw	(low (main@flag| 0))& (0+255)
   758  050E  00CA               	movwf	??_main+2
   759  050F  084A               	movf	??_main+2,w
   760  0510  00F6               	movwf	iohandler@flag
   761  0511  304F               	movlw	(low (main@bus_register| 0))& (0+255)
   762  0512  120A  118A  256A  120A  118A  	fcall	_iohandler
   763  0517                     l1459:
   764                           
   765                           ;main.c: 108: if (preg == 4 || nreg == 4) {
   766  0517  3004               	movlw	4
   767  0518  1283               	bcf	3,5	;RP0=0, select bank0
   768  0519  1303               	bcf	3,6	;RP1=0, select bank0
   769  051A  0657               	xorwf	main@preg,w
   770  051B  1903               	btfsc	3,2
   771  051C  2D1E               	goto	u981
   772  051D  2D1F               	goto	u980
   773  051E                     u981:
   774  051E  2D25               	goto	l1463
   775  051F                     u980:
   776  051F                     l1461:
   777  051F  3004               	movlw	4
   778  0520  0655               	xorwf	main@nreg,w
   779  0521  1D03               	btfss	3,2
   780  0522  2D24               	goto	u991
   781  0523  2D25               	goto	u990
   782  0524                     u991:
   783  0524  2D36               	goto	l1469
   784  0525                     u990:
   785  0525                     l1463:
   786                           
   787                           ;main.c: 109: chk_passwd(bus_register, &preg);
   788  0525  3057               	movlw	(low (main@preg| 0))& (0+255)
   789  0526  00C8               	movwf	??_main
   790  0527  0848               	movf	??_main,w
   791  0528  00F3               	movwf	chk_passwd@preg
   792  0529  304F               	movlw	(low (main@bus_register| 0))& (0+255)
   793  052A  120A  118A  2488  120A  118A  	fcall	_chk_passwd
   794  052F                     l1465:
   795                           
   796                           ;main.c: 110: if (!PORTDbits.RD1) nreg = 0;
   797  052F  1283               	bcf	3,5	;RP0=0, select bank0
   798  0530  1303               	bcf	3,6	;RP1=0, select bank0
   799  0531  1888               	btfsc	8,1	;volatile
   800  0532  2D34               	goto	u1001
   801  0533  2D35               	goto	u1000
   802  0534                     u1001:
   803  0534  2D36               	goto	l1469
   804  0535                     u1000:
   805  0535                     l1467:
   806  0535  01D5               	clrf	main@nreg
   807  0536                     l1469:
   808                           
   809                           ;main.c: 111: };main.c: 113: PORTDbits.RD1 = PORTDbits.RD0;
   810  0536  1808               	btfsc	8,0	;volatile
   811  0537  2D39               	goto	u1011
   812  0538  2D3D               	goto	u1010
   813  0539                     u1011:
   814  0539  1283               	bcf	3,5	;RP0=0, select bank0
   815  053A  1303               	bcf	3,6	;RP1=0, select bank0
   816  053B  1488               	bsf	8,1	;volatile
   817  053C  2D40               	goto	u1024
   818  053D                     u1010:
   819  053D  1283               	bcf	3,5	;RP0=0, select bank0
   820  053E  1303               	bcf	3,6	;RP1=0, select bank0
   821  053F  1088               	bcf	8,1	;volatile
   822  0540                     u1024:
   823  0540                     l1471:
   824                           
   825                           ;main.c: 116: preg = PORTDbits.RD1 ? preg : 0U;
   826  0540  1888               	btfsc	8,1	;volatile
   827  0541  2D43               	goto	u1031
   828  0542  2D44               	goto	u1030
   829  0543                     u1031:
   830  0543  2D47               	goto	l1475
   831  0544                     u1030:
   832  0544                     l1473:
   833  0544  01CB               	clrf	_main$192
   834  0545  01CC               	clrf	_main$192+1
   835  0546  2D4E               	goto	l51
   836  0547                     l1475:
   837  0547  0857               	movf	main@preg,w
   838  0548  00C8               	movwf	??_main
   839  0549  01C9               	clrf	??_main+1
   840  054A  0848               	movf	??_main,w
   841  054B  00CB               	movwf	_main$192
   842  054C  0849               	movf	??_main+1,w
   843  054D  00CC               	movwf	_main$192+1
   844  054E                     l51:
   845  054E  084B               	movf	_main$192,w
   846  054F  00C8               	movwf	??_main
   847  0550  0848               	movf	??_main,w
   848  0551  00D7               	movwf	main@preg
   849                           
   850                           ;main.c: 119: ccall = (ccall > pit) ? 0U : ccall + 1U;
   851  0552  0854               	movf	main@ccall,w
   852  0553  0253               	subwf	main@pit,w
   853  0554  1C03               	skipc
   854  0555  2D57               	goto	u1041
   855  0556  2D58               	goto	u1040
   856  0557                     u1041:
   857  0557  2D60               	goto	l1479
   858  0558                     u1040:
   859  0558                     l1477:
   860  0558  0854               	movf	main@ccall,w
   861  0559  3E01               	addlw	1
   862  055A  00CD               	movwf	_main$193
   863  055B  3000               	movlw	0
   864  055C  1803               	skipnc
   865  055D  3001               	movlw	1
   866  055E  00CE               	movwf	_main$193+1
   867  055F  2D62               	goto	l1481
   868  0560                     l1479:
   869  0560  01CD               	clrf	_main$193
   870  0561  01CE               	clrf	_main$193+1
   871  0562                     l1481:
   872  0562  084D               	movf	_main$193,w
   873  0563  00C8               	movwf	??_main
   874  0564  0848               	movf	??_main,w
   875  0565  00D4               	movwf	main@ccall
   876                           
   877                           ;main.c: 120: }
   878  0566  2CF1               	goto	l1455
   879  0567  120A  118A  2800   	ljmp	start
   880  056A                     __end_of_main:
   881                           
   882                           	psect	text1
   883  056A                     __ptext1:	
   884 ;; *************** function _iohandler *****************
   885 ;; Defined at:
   886 ;;		line 200 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  bus             1    wreg     PTR unsigned char 
   889 ;;		 -> main@bus_register(4), 
   890 ;;  preg            1    4[COMMON] PTR unsigned char 
   891 ;;		 -> main@preg(1), 
   892 ;;  nreg            1    5[COMMON] PTR unsigned char 
   893 ;;		 -> main@nreg(1), 
   894 ;;  flag            1    6[COMMON] PTR unsigned char 
   895 ;;		 -> main@flag(1), 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  bus             1    4[BANK0 ] PTR unsigned char 
   898 ;;		 -> main@bus_register(4), 
   899 ;;  pp              1    5[BANK0 ] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         3       0       0       0       0
   910 ;;      Locals:         0       6       0       0       0
   911 ;;      Temps:          3       0       0       0       0
   912 ;;      Totals:         6       6       0       0       0
   913 ;;Total ram usage:       12 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    1
   916 ;; This function calls:
   917 ;;		_clearreg
   918 ;;		_key_fwd
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _iohandler
   926  056A                     _iohandler:
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _iohandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   930                           ;iohandler@bus stored from wreg
   931  056A  1283               	bcf	3,5	;RP0=0, select bank0
   932  056B  1303               	bcf	3,6	;RP1=0, select bank0
   933  056C  00A4               	movwf	iohandler@bus
   934  056D                     l1305:
   935                           
   936                           ;main.c: 204: if (PORTCbits.RC2 == 1U && *flag == 1) {
   937  056D  1D07               	btfss	7,2	;volatile
   938  056E  2D70               	goto	u711
   939  056F  2D71               	goto	u710
   940  0570                     u711:
   941  0570  2D94               	goto	l1317
   942  0571                     u710:
   943  0571                     l1307:
   944  0571  0876               	movf	iohandler@flag,w
   945  0572  0084               	movwf	4
   946  0573  1383               	bcf	3,7	;select IRP bank0
   947  0574  0300               	decf	0,w
   948  0575  1D03               	btfss	3,2
   949  0576  2D78               	goto	u721
   950  0577  2D79               	goto	u720
   951  0578                     u721:
   952  0578  2D94               	goto	l1317
   953  0579                     u720:
   954  0579                     l1309:
   955                           
   956                           ;main.c: 205: _delay((unsigned long)((50)*(20000000/4000000.0)));
   957  0579  3053               	movlw	83
   958  057A  00F7               	movwf	??_iohandler
   959  057B                     u1057:
   960  057B  0BF7               	decfsz	??_iohandler,f
   961  057C  2D7B               	goto	u1057
   962  057D                     l1311:
   963                           
   964                           ;main.c: 206: if (PORTCbits.RC2 == 1) {
   965  057D  1283               	bcf	3,5	;RP0=0, select bank0
   966  057E  1303               	bcf	3,6	;RP1=0, select bank0
   967  057F  1D07               	btfss	7,2	;volatile
   968  0580  2D82               	goto	u731
   969  0581  2D83               	goto	u730
   970  0582                     u731:
   971  0582  2D94               	goto	l1317
   972  0583                     u730:
   973  0583                     l1313:
   974                           
   975                           ;main.c: 207: key_fwd(bus, *preg);
   976  0583  0874               	movf	iohandler@preg,w
   977  0584  0084               	movwf	4
   978  0585  1383               	bcf	3,7	;select IRP bank0
   979  0586  0800               	movf	0,w
   980  0587  00F7               	movwf	??_iohandler
   981  0588  0877               	movf	??_iohandler,w
   982  0589  00F0               	movwf	key_fwd@pos
   983  058A  0824               	movf	iohandler@bus,w
   984  058B  120A  118A  243D  120A  118A  	fcall	_key_fwd
   985  0590                     l1315:
   986                           
   987                           ;main.c: 208: *flag = 0;
   988  0590  0876               	movf	iohandler@flag,w
   989  0591  0084               	movwf	4
   990  0592  1383               	bcf	3,7	;select IRP bank0
   991  0593  0180               	clrf	0
   992  0594                     l1317:
   993                           
   994                           ;main.c: 209: };main.c: 210: };main.c: 214: if (PORTCbits.RC3 == 1U && *flag == 1) {
   995  0594  1283               	bcf	3,5	;RP0=0, select bank0
   996  0595  1303               	bcf	3,6	;RP1=0, select bank0
   997  0596  1D87               	btfss	7,3	;volatile
   998  0597  2D99               	goto	u741
   999  0598  2D9A               	goto	u740
  1000  0599                     u741:
  1001  0599  2DBC               	goto	l1333
  1002  059A                     u740:
  1003  059A                     l1319:
  1004  059A  0876               	movf	iohandler@flag,w
  1005  059B  0084               	movwf	4
  1006  059C  1383               	bcf	3,7	;select IRP bank0
  1007  059D  0300               	decf	0,w
  1008  059E  1D03               	btfss	3,2
  1009  059F  2DA1               	goto	u751
  1010  05A0  2DA2               	goto	u750
  1011  05A1                     u751:
  1012  05A1  2DBC               	goto	l1333
  1013  05A2                     u750:
  1014  05A2                     l1321:
  1015                           
  1016                           ;main.c: 215: _delay((unsigned long)((50)*(20000000/4000000.0)));
  1017  05A2  3053               	movlw	83
  1018  05A3  00F7               	movwf	??_iohandler
  1019  05A4                     u1067:
  1020  05A4  0BF7               	decfsz	??_iohandler,f
  1021  05A5  2DA4               	goto	u1067
  1022  05A6                     l1323:
  1023                           
  1024                           ;main.c: 216: if (PORTCbits.RC3 == 1) {
  1025  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1026  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1027  05A8  1D87               	btfss	7,3	;volatile
  1028  05A9  2DAB               	goto	u761
  1029  05AA  2DAC               	goto	u760
  1030  05AB                     u761:
  1031  05AB  2DBC               	goto	l1333
  1032  05AC                     u760:
  1033  05AC                     l1325:
  1034                           
  1035                           ;main.c: 217: clearreg(bus);
  1036  05AC  0824               	movf	iohandler@bus,w
  1037  05AD  120A  118A  240D  120A  118A  	fcall	_clearreg
  1038  05B2                     l1327:
  1039                           
  1040                           ;main.c: 218: *preg = 0;
  1041  05B2  0874               	movf	iohandler@preg,w
  1042  05B3  0084               	movwf	4
  1043  05B4  1383               	bcf	3,7	;select IRP bank0
  1044  05B5  0180               	clrf	0
  1045  05B6                     l1329:
  1046                           
  1047                           ;main.c: 219: *flag = 0;
  1048  05B6  0876               	movf	iohandler@flag,w
  1049  05B7  0084               	movwf	4
  1050  05B8  0180               	clrf	0
  1051  05B9                     l1331:
  1052                           
  1053                           ;main.c: 220: *nreg = 0;
  1054  05B9  0875               	movf	iohandler@nreg,w
  1055  05BA  0084               	movwf	4
  1056  05BB  0180               	clrf	0
  1057  05BC                     l1333:
  1058                           
  1059                           ;main.c: 221: };main.c: 222: };main.c: 226: if (PORTCbits.RC0 == 0 && PORTCbits.RC1 == 0
      +                           && PORTCbits.RC2 == 0 && PORTCbits.RC3 == 0 && *flag == 0) {
  1060  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1061  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1062  05BE  1807               	btfsc	7,0	;volatile
  1063  05BF  2DC1               	goto	u771
  1064  05C0  2DC2               	goto	u770
  1065  05C1                     u771:
  1066  05C1  2E85               	goto	l1403
  1067  05C2                     u770:
  1068  05C2                     l1335:
  1069  05C2  1887               	btfsc	7,1	;volatile
  1070  05C3  2DC5               	goto	u781
  1071  05C4  2DC6               	goto	u780
  1072  05C5                     u781:
  1073  05C5  2E85               	goto	l1403
  1074  05C6                     u780:
  1075  05C6                     l1337:
  1076  05C6  1907               	btfsc	7,2	;volatile
  1077  05C7  2DC9               	goto	u791
  1078  05C8  2DCA               	goto	u790
  1079  05C9                     u791:
  1080  05C9  2E85               	goto	l1403
  1081  05CA                     u790:
  1082  05CA                     l1339:
  1083  05CA  1987               	btfsc	7,3	;volatile
  1084  05CB  2DCD               	goto	u801
  1085  05CC  2DCE               	goto	u800
  1086  05CD                     u801:
  1087  05CD  2E85               	goto	l1403
  1088  05CE                     u800:
  1089  05CE                     l1341:
  1090  05CE  0876               	movf	iohandler@flag,w
  1091  05CF  0084               	movwf	4
  1092  05D0  1383               	bcf	3,7	;select IRP bank0
  1093  05D1  0800               	movf	0,w
  1094  05D2  1D03               	btfss	3,2
  1095  05D3  2DD5               	goto	u811
  1096  05D4  2DD6               	goto	u810
  1097  05D5                     u811:
  1098  05D5  2E85               	goto	l1403
  1099  05D6                     u810:
  1100  05D6                     l1343:
  1101                           
  1102                           ;main.c: 227: *flag = 1U;
  1103  05D6  0876               	movf	iohandler@flag,w
  1104  05D7  0084               	movwf	4
  1105  05D8  0180               	clrf	0
  1106  05D9  0A80               	incf	0,f
  1107  05DA  2E85               	goto	l1403
  1108  05DB                     l97:	
  1109                           ;main.c: 238: case 0:
  1110                           
  1111                           
  1112                           ;main.c: 239: if (PORTCbits.RC0 == 1U && *flag == 1) {
  1113  05DB  1C07               	btfss	7,0	;volatile
  1114  05DC  2DDE               	goto	u821
  1115  05DD  2DDF               	goto	u820
  1116  05DE                     u821:
  1117  05DE  2E8E               	goto	l117
  1118  05DF                     u820:
  1119  05DF                     l1345:
  1120  05DF  0876               	movf	iohandler@flag,w
  1121  05E0  0084               	movwf	4
  1122  05E1  1383               	bcf	3,7	;select IRP bank0
  1123  05E2  0300               	decf	0,w
  1124  05E3  1D03               	btfss	3,2
  1125  05E4  2DE6               	goto	u831
  1126  05E5  2DE7               	goto	u830
  1127  05E6                     u831:
  1128  05E6  2E8E               	goto	l117
  1129  05E7                     u830:
  1130  05E7                     l1347:
  1131                           
  1132                           ;main.c: 240: _delay((unsigned long)((50)*(20000000/4000000.0)));
  1133  05E7  3053               	movlw	83
  1134  05E8  00F7               	movwf	??_iohandler
  1135  05E9                     u1077:
  1136  05E9  0BF7               	decfsz	??_iohandler,f
  1137  05EA  2DE9               	goto	u1077
  1138  05EB                     l1349:
  1139                           
  1140                           ;main.c: 241: if (PORTCbits.RC0 == 1) {
  1141  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1142  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1143  05ED  1C07               	btfss	7,0	;volatile
  1144  05EE  2DF0               	goto	u841
  1145  05EF  2DF1               	goto	u840
  1146  05F0                     u841:
  1147  05F0  2E8E               	goto	l117
  1148  05F1                     u840:
  1149  05F1                     l1351:
  1150                           
  1151                           ;main.c: 243: for (pp = 3; pp >= 1; --pp) {
  1152  05F1  3003               	movlw	3
  1153  05F2  00F7               	movwf	??_iohandler
  1154  05F3  0877               	movf	??_iohandler,w
  1155  05F4  00A5               	movwf	iohandler@pp
  1156  05F5                     l1357:
  1157                           
  1158                           ;main.c: 244: if (*nreg < 3)
  1159  05F5  0875               	movf	iohandler@nreg,w
  1160  05F6  0084               	movwf	4
  1161  05F7  3003               	movlw	3
  1162  05F8  1383               	bcf	3,7	;select IRP bank0
  1163  05F9  0200               	subwf	0,w
  1164  05FA  1803               	skipnc
  1165  05FB  2DFD               	goto	u851
  1166  05FC  2DFE               	goto	u850
  1167  05FD                     u851:
  1168  05FD  2E0D               	goto	l1361
  1169  05FE                     u850:
  1170  05FE                     l1359:
  1171                           
  1172                           ;main.c: 245: bus[pp] = bus[pp - 1];
  1173  05FE  0825               	movf	iohandler@pp,w
  1174  05FF  0724               	addwf	iohandler@bus,w
  1175  0600  00F7               	movwf	??_iohandler
  1176  0601  0877               	movf	??_iohandler,w
  1177  0602  3EFF               	addlw	-1
  1178  0603  0084               	movwf	4
  1179  0604  0800               	movf	0,w
  1180  0605  00F8               	movwf	??_iohandler+1
  1181  0606  0825               	movf	iohandler@pp,w
  1182  0607  0724               	addwf	iohandler@bus,w
  1183  0608  00F9               	movwf	??_iohandler+2
  1184  0609  0879               	movf	??_iohandler+2,w
  1185  060A  0084               	movwf	4
  1186  060B  0878               	movf	??_iohandler+1,w
  1187  060C  0080               	movwf	0
  1188  060D                     l1361:
  1189  060D  3001               	movlw	1
  1190  060E  02A5               	subwf	iohandler@pp,f
  1191  060F                     l1363:
  1192  060F  0825               	movf	iohandler@pp,w
  1193  0610  1D03               	btfss	3,2
  1194  0611  2E13               	goto	u861
  1195  0612  2E14               	goto	u860
  1196  0613                     u861:
  1197  0613  2DF5               	goto	l1357
  1198  0614                     u860:
  1199  0614                     l1365:
  1200                           
  1201                           ;main.c: 246: };main.c: 248: *nreg += 1;
  1202  0614  3001               	movlw	1
  1203  0615  00F7               	movwf	??_iohandler
  1204  0616  0875               	movf	iohandler@nreg,w
  1205  0617  0084               	movwf	4
  1206  0618  0877               	movf	??_iohandler,w
  1207  0619  0780               	addwf	0,f
  1208  061A                     l1367:
  1209                           
  1210                           ;main.c: 249: *flag = 0;
  1211  061A  0876               	movf	iohandler@flag,w
  1212  061B  0084               	movwf	4
  1213  061C  0180               	clrf	0
  1214  061D  2E8E               	goto	l117
  1215  061E                     l104:	
  1216                           ;main.c: 256: case 1:
  1217                           
  1218                           
  1219                           ;main.c: 257: if (PORTCbits.RC0 == 1U && *flag == 1) {
  1220  061E  1C07               	btfss	7,0	;volatile
  1221  061F  2E21               	goto	u871
  1222  0620  2E22               	goto	u870
  1223  0621                     u871:
  1224  0621  2E52               	goto	l1383
  1225  0622                     u870:
  1226  0622                     l1369:
  1227  0622  0876               	movf	iohandler@flag,w
  1228  0623  0084               	movwf	4
  1229  0624  1383               	bcf	3,7	;select IRP bank0
  1230  0625  0300               	decf	0,w
  1231  0626  1D03               	btfss	3,2
  1232  0627  2E29               	goto	u881
  1233  0628  2E2A               	goto	u880
  1234  0629                     u881:
  1235  0629  2E52               	goto	l1383
  1236  062A                     u880:
  1237  062A                     l1371:
  1238                           
  1239                           ;main.c: 258: _delay((unsigned long)((50)*(20000000/4000000.0)));
  1240  062A  3053               	movlw	83
  1241  062B  00F7               	movwf	??_iohandler
  1242  062C                     u1087:
  1243  062C  0BF7               	decfsz	??_iohandler,f
  1244  062D  2E2C               	goto	u1087
  1245  062E                     l1373:
  1246                           
  1247                           ;main.c: 259: if (PORTCbits.RC0 == 1) {
  1248  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1249  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0630  1C07               	btfss	7,0	;volatile
  1251  0631  2E33               	goto	u891
  1252  0632  2E34               	goto	u890
  1253  0633                     u891:
  1254  0633  2E52               	goto	l1383
  1255  0634                     u890:
  1256  0634                     l1375:
  1257                           
  1258                           ;main.c: 260: *preg = (*preg > 3) ? 0U : *preg + 1U;
  1259  0634  0874               	movf	iohandler@preg,w
  1260  0635  0084               	movwf	4
  1261  0636  3004               	movlw	4
  1262  0637  1383               	bcf	3,7	;select IRP bank0
  1263  0638  0200               	subwf	0,w
  1264  0639  1803               	skipnc
  1265  063A  2E3C               	goto	u901
  1266  063B  2E3D               	goto	u900
  1267  063C                     u901:
  1268  063C  2E47               	goto	l1379
  1269  063D                     u900:
  1270  063D                     l1377:
  1271  063D  0874               	movf	iohandler@preg,w
  1272  063E  0084               	movwf	4
  1273  063F  0800               	movf	0,w
  1274  0640  3E01               	addlw	1
  1275  0641  00A0               	movwf	_iohandler$228
  1276  0642  3000               	movlw	0
  1277  0643  1803               	skipnc
  1278  0644  3001               	movlw	1
  1279  0645  00A1               	movwf	_iohandler$228+1
  1280  0646  2E49               	goto	l1381
  1281  0647                     l1379:
  1282  0647  01A0               	clrf	_iohandler$228
  1283  0648  01A1               	clrf	_iohandler$228+1
  1284  0649                     l1381:
  1285  0649  0820               	movf	_iohandler$228,w
  1286  064A  00F7               	movwf	??_iohandler
  1287  064B  0874               	movf	iohandler@preg,w
  1288  064C  0084               	movwf	4
  1289  064D  0877               	movf	??_iohandler,w
  1290  064E  0080               	movwf	0
  1291                           
  1292                           ;main.c: 261: *flag = 0;
  1293  064F  0876               	movf	iohandler@flag,w
  1294  0650  0084               	movwf	4
  1295  0651  0180               	clrf	0
  1296  0652                     l1383:
  1297                           
  1298                           ;main.c: 262: };main.c: 263: };main.c: 265: if (PORTCbits.RC1 == 1U && *flag == 1) {
  1299  0652  1C87               	btfss	7,1	;volatile
  1300  0653  2E55               	goto	u911
  1301  0654  2E56               	goto	u910
  1302  0655                     u911:
  1303  0655  2E8E               	goto	l117
  1304  0656                     u910:
  1305  0656                     l1385:
  1306  0656  0876               	movf	iohandler@flag,w
  1307  0657  0084               	movwf	4
  1308  0658  1383               	bcf	3,7	;select IRP bank0
  1309  0659  0300               	decf	0,w
  1310  065A  1D03               	btfss	3,2
  1311  065B  2E5D               	goto	u921
  1312  065C  2E5E               	goto	u920
  1313  065D                     u921:
  1314  065D  2E8E               	goto	l117
  1315  065E                     u920:
  1316  065E                     l1387:
  1317                           
  1318                           ;main.c: 266: _delay((unsigned long)((50)*(20000000/4000000.0)));
  1319  065E  3053               	movlw	83
  1320  065F  00F7               	movwf	??_iohandler
  1321  0660                     u1097:
  1322  0660  0BF7               	decfsz	??_iohandler,f
  1323  0661  2E60               	goto	u1097
  1324  0662                     l1389:
  1325                           
  1326                           ;main.c: 267: if (PORTCbits.RC1 == 1) {
  1327  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0664  1C87               	btfss	7,1	;volatile
  1330  0665  2E67               	goto	u931
  1331  0666  2E68               	goto	u930
  1332  0667                     u931:
  1333  0667  2E8E               	goto	l117
  1334  0668                     u930:
  1335  0668                     l1391:
  1336                           
  1337                           ;main.c: 268: *preg = (*preg == 0) ? 3U : *preg - 1U;
  1338  0668  0874               	movf	iohandler@preg,w
  1339  0669  0084               	movwf	4
  1340  066A  1383               	bcf	3,7	;select IRP bank0
  1341  066B  0800               	movf	0,w
  1342  066C  1903               	btfsc	3,2
  1343  066D  2E6F               	goto	u941
  1344  066E  2E70               	goto	u940
  1345  066F                     u941:
  1346  066F  2E7A               	goto	l1395
  1347  0670                     u940:
  1348  0670                     l1393:
  1349  0670  0874               	movf	iohandler@preg,w
  1350  0671  0084               	movwf	4
  1351  0672  0800               	movf	0,w
  1352  0673  3EFF               	addlw	255
  1353  0674  00A2               	movwf	_iohandler$229
  1354  0675  30FF               	movlw	255
  1355  0676  1803               	skipnc
  1356  0677  3000               	movlw	0
  1357  0678  00A3               	movwf	_iohandler$229+1
  1358  0679  2E7E               	goto	l1397
  1359  067A                     l1395:
  1360  067A  3003               	movlw	3
  1361  067B  00A2               	movwf	_iohandler$229
  1362  067C  3000               	movlw	0
  1363  067D  00A3               	movwf	_iohandler$229+1
  1364  067E                     l1397:
  1365  067E  0822               	movf	_iohandler$229,w
  1366  067F  00F7               	movwf	??_iohandler
  1367  0680  0874               	movf	iohandler@preg,w
  1368  0681  0084               	movwf	4
  1369  0682  0877               	movf	??_iohandler,w
  1370  0683  0080               	movwf	0
  1371  0684  2E1A               	goto	l1367
  1372  0685                     l1403:
  1373  0685  0C08               	rrf	8,w	;volatile
  1374  0686  3901               	andlw	1
  1375                           
  1376                           ; Switch size 1, requested type "simple"
  1377                           ; Number of cases is 2, Range of values is 0 to 1
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte            7     4 (average)
  1381                           ; direct_byte           14     8 (fixed)
  1382                           ; jumptable            260     6 (fixed)
  1383                           ;	Chosen strategy is simple_byte
  1384  0687  3A00               	xorlw	0	; case 0
  1385  0688  1903               	skipnz
  1386  0689  2DDB               	goto	l97
  1387  068A  3A01               	xorlw	1	; case 1
  1388  068B  1903               	skipnz
  1389  068C  2E1E               	goto	l104
  1390  068D  2E8E               	goto	l117
  1391  068E                     l117:
  1392  068E  0008               	return
  1393  068F                     __end_of_iohandler:
  1394                           
  1395                           	psect	text2
  1396  043D                     __ptext2:	
  1397 ;; *************** function _key_fwd *****************
  1398 ;; Defined at:
  1399 ;;		line 171 in file "main.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  bus             1    wreg     PTR unsigned char 
  1402 ;;		 -> main@bus_register(4), 
  1403 ;;  pos             1    0[COMMON] unsigned char 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  bus             1    3[COMMON] PTR unsigned char 
  1406 ;;		 -> main@bus_register(4), 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         1       0       0       0       0
  1417 ;;      Locals:         1       0       0       0       0
  1418 ;;      Temps:          2       0       0       0       0
  1419 ;;      Totals:         4       0       0       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_iohandler
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _key_fwd
  1431  043D                     _key_fwd:
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _key_fwd: [wreg-fsr0h+status,2+status,0]
  1435                           ;key_fwd@bus stored from wreg
  1436  043D  00F3               	movwf	key_fwd@bus
  1437  043E                     l1147:
  1438                           
  1439                           ;main.c: 173: if (bus[pos] >= 9) {
  1440  043E  0870               	movf	key_fwd@pos,w
  1441  043F  0773               	addwf	key_fwd@bus,w
  1442  0440  00F1               	movwf	??_key_fwd
  1443  0441  0871               	movf	??_key_fwd,w
  1444  0442  0084               	movwf	4
  1445  0443  3009               	movlw	9
  1446  0444  1383               	bcf	3,7	;select IRP bank0
  1447  0445  0200               	subwf	0,w
  1448  0446  1C03               	skipc
  1449  0447  2C49               	goto	u551
  1450  0448  2C4A               	goto	u550
  1451  0449                     u551:
  1452  0449  2C51               	goto	l1151
  1453  044A                     u550:
  1454  044A                     l1149:
  1455                           
  1456                           ;main.c: 174: bus[pos] = 0x00;
  1457  044A  0870               	movf	key_fwd@pos,w
  1458  044B  0773               	addwf	key_fwd@bus,w
  1459  044C  00F1               	movwf	??_key_fwd
  1460  044D  0871               	movf	??_key_fwd,w
  1461  044E  0084               	movwf	4
  1462  044F  0180               	clrf	0
  1463                           
  1464                           ;main.c: 175: } else {
  1465  0450  2C5A               	goto	l83
  1466  0451                     l1151:
  1467                           
  1468                           ;main.c: 176: bus[pos] += 1;
  1469  0451  3001               	movlw	1
  1470  0452  00F1               	movwf	??_key_fwd
  1471  0453  0870               	movf	key_fwd@pos,w
  1472  0454  0773               	addwf	key_fwd@bus,w
  1473  0455  00F2               	movwf	??_key_fwd+1
  1474  0456  0872               	movf	??_key_fwd+1,w
  1475  0457  0084               	movwf	4
  1476  0458  0871               	movf	??_key_fwd,w
  1477  0459  0780               	addwf	0,f
  1478  045A                     l83:
  1479  045A  0008               	return
  1480  045B                     __end_of_key_fwd:
  1481                           
  1482                           	psect	text3
  1483  040D                     __ptext3:	
  1484 ;; *************** function _clearreg *****************
  1485 ;; Defined at:
  1486 ;;		line 181 in file "main.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  breg            1    wreg     PTR unsigned char 
  1489 ;;		 -> main@bus_register(4), 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  breg            1    1[COMMON] PTR unsigned char 
  1492 ;;		 -> main@bus_register(4), 
  1493 ;;  i               1    2[COMMON] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       0       0       0       0
  1504 ;;      Locals:         2       0       0       0       0
  1505 ;;      Temps:          1       0       0       0       0
  1506 ;;      Totals:         3       0       0       0       0
  1507 ;;Total ram usage:        3 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_iohandler
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           
  1517                           ;psect for function _clearreg
  1518  040D                     _clearreg:
  1519                           
  1520                           ;incstack = 0
  1521                           ; Regs used in _clearreg: [wreg-fsr0h+status,2+status,0]
  1522                           ;clearreg@breg stored from wreg
  1523  040D  00F1               	movwf	clearreg@breg
  1524  040E                     l1153:
  1525                           
  1526                           ;main.c: 183: uint8_t i;;main.c: 185: for (i = 0; i < 4; ++i) {
  1527  040E  01F2               	clrf	clearreg@i
  1528  040F                     l1159:
  1529                           
  1530                           ;main.c: 186: *breg = 0x0A;
  1531  040F  300A               	movlw	10
  1532  0410  00F0               	movwf	??_clearreg
  1533  0411  0871               	movf	clearreg@breg,w
  1534  0412  0084               	movwf	4
  1535  0413  0870               	movf	??_clearreg,w
  1536  0414  1383               	bcf	3,7	;select IRP bank0
  1537  0415  0080               	movwf	0
  1538  0416                     l1161:
  1539                           
  1540                           ;main.c: 187: breg++;
  1541  0416  3001               	movlw	1
  1542  0417  00F0               	movwf	??_clearreg
  1543  0418  0870               	movf	??_clearreg,w
  1544  0419  07F1               	addwf	clearreg@breg,f
  1545  041A                     l1163:
  1546  041A  3001               	movlw	1
  1547  041B  00F0               	movwf	??_clearreg
  1548  041C  0870               	movf	??_clearreg,w
  1549  041D  07F2               	addwf	clearreg@i,f
  1550  041E                     l1165:
  1551  041E  3004               	movlw	4
  1552  041F  0272               	subwf	clearreg@i,w
  1553  0420  1C03               	skipc
  1554  0421  2C23               	goto	u561
  1555  0422  2C24               	goto	u560
  1556  0423                     u561:
  1557  0423  2C0F               	goto	l1159
  1558  0424                     u560:
  1559  0424                     l88:
  1560  0424  0008               	return
  1561  0425                     __end_of_clearreg:
  1562                           
  1563                           	psect	text4
  1564  0488                     __ptext4:	
  1565 ;; *************** function _chk_passwd *****************
  1566 ;; Defined at:
  1567 ;;		line 123 in file "main.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  breg            1    wreg     PTR unsigned char 
  1570 ;;		 -> main@bus_register(4), 
  1571 ;;  preg            1    3[COMMON] PTR unsigned char 
  1572 ;;		 -> main@preg(1), 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  breg            1   10[COMMON] PTR unsigned char 
  1575 ;;		 -> main@bus_register(4), 
  1576 ;;  passwd          4    6[COMMON] unsigned char [4]
  1577 ;;  i               1   11[COMMON] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         1       0       0       0       0
  1588 ;;      Locals:         6       0       0       0       0
  1589 ;;      Temps:          2       0       0       0       0
  1590 ;;      Totals:         9       0       0       0       0
  1591 ;;Total ram usage:        9 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    1
  1594 ;; This function calls:
  1595 ;;		_disp_error
  1596 ;;		_disp_success
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _chk_passwd
  1604  0488                     _chk_passwd:
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _chk_passwd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1608                           ;chk_passwd@breg stored from wreg
  1609  0488  00FA               	movwf	chk_passwd@breg
  1610  0489                     l1405:
  1611                           
  1612                           ;main.c: 124: uint8_t i;;main.c: 125: uint8_t passwd[] = {0x09, 0x05, 0x08, 0x03};
  1613  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1614  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1615  048B  0863               	movf	chk_passwd@F1328+3,w
  1616  048C  00F9               	movwf	chk_passwd@passwd+3
  1617  048D  0862               	movf	chk_passwd@F1328+2,w
  1618  048E  00F8               	movwf	chk_passwd@passwd+2
  1619  048F  0861               	movf	chk_passwd@F1328+1,w
  1620  0490  00F7               	movwf	chk_passwd@passwd+1
  1621  0491  0860               	movf	chk_passwd@F1328,w
  1622  0492  00F6               	movwf	chk_passwd@passwd
  1623  0493                     l1407:
  1624                           
  1625                           ;main.c: 127: for (i = 0; i < 4; ++i) {
  1626  0493  01FB               	clrf	chk_passwd@i
  1627  0494                     l1413:
  1628                           
  1629                           ;main.c: 128: if (*(breg + i) != passwd[i]) {
  1630  0494  087B               	movf	chk_passwd@i,w
  1631  0495  3E76               	addlw	(low (chk_passwd@passwd| 0))& (0+255)
  1632  0496  0084               	movwf	4
  1633  0497  0800               	movf	0,w
  1634  0498  00F4               	movwf	??_chk_passwd
  1635  0499  087B               	movf	chk_passwd@i,w
  1636  049A  077A               	addwf	chk_passwd@breg,w
  1637  049B  00F5               	movwf	??_chk_passwd+1
  1638  049C  0875               	movf	??_chk_passwd+1,w
  1639  049D  0084               	movwf	4
  1640  049E  1383               	bcf	3,7	;select IRP bank0
  1641  049F  0800               	movf	0,w
  1642  04A0  0674               	xorwf	??_chk_passwd,w
  1643  04A1  1903               	skipnz
  1644  04A2  2CA4               	goto	u951
  1645  04A3  2CA5               	goto	u950
  1646  04A4                     u951:
  1647  04A4  2CA6               	goto	l1417
  1648  04A5                     u950:
  1649  04A5  2CB7               	goto	l1423
  1650  04A6                     l1417:
  1651  04A6  3001               	movlw	1
  1652  04A7  00F4               	movwf	??_chk_passwd
  1653  04A8  0874               	movf	??_chk_passwd,w
  1654  04A9  07FB               	addwf	chk_passwd@i,f
  1655  04AA                     l1419:
  1656  04AA  3004               	movlw	4
  1657  04AB  027B               	subwf	chk_passwd@i,w
  1658  04AC  1C03               	skipc
  1659  04AD  2CAF               	goto	u961
  1660  04AE  2CB0               	goto	u960
  1661  04AF                     u961:
  1662  04AF  2C94               	goto	l1413
  1663  04B0                     u960:
  1664  04B0                     l1421:
  1665                           
  1666                           ;main.c: 130: };main.c: 131: };main.c: 134: disp_success(breg); goto pass;
  1667  04B0  087A               	movf	chk_passwd@breg,w
  1668  04B1  120A  118A  23F5  120A  118A  	fcall	_disp_success
  1669  04B6  2CBD               	goto	l1425
  1670  04B7                     l1423:
  1671  04B7  087A               	movf	chk_passwd@breg,w
  1672  04B8  120A  118A  23DD  120A  118A  	fcall	_disp_error
  1673  04BD                     l1425:
  1674  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1675  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1676  04BF  1C88               	btfss	8,1	;volatile
  1677  04C0  2CC2               	goto	u971
  1678  04C1  2CC3               	goto	u970
  1679  04C2                     u971:
  1680  04C2  2CC7               	goto	l68
  1681  04C3                     u970:
  1682  04C3                     l1427:
  1683  04C3  0873               	movf	chk_passwd@preg,w
  1684  04C4  0084               	movwf	4
  1685  04C5  1383               	bcf	3,7	;select IRP bank0
  1686  04C6  0180               	clrf	0
  1687  04C7                     l68:
  1688  04C7  0008               	return
  1689  04C8                     __end_of_chk_passwd:
  1690                           
  1691                           	psect	text5
  1692  03F5                     __ptext5:	
  1693 ;; *************** function _disp_success *****************
  1694 ;; Defined at:
  1695 ;;		line 145 in file "main.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  breg            1    wreg     PTR unsigned char 
  1698 ;;		 -> main@bus_register(4), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  breg            1    1[COMMON] PTR unsigned char 
  1701 ;;		 -> main@bus_register(4), 
  1702 ;;  i               1    2[COMMON] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         2       0       0       0       0
  1714 ;;      Temps:          1       0       0       0       0
  1715 ;;      Totals:         3       0       0       0       0
  1716 ;;Total ram usage:        3 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_chk_passwd
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _disp_success
  1727  03F5                     _disp_success:
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _disp_success: [wreg-fsr0h+status,2+status,0]
  1731                           ;disp_success@breg stored from wreg
  1732  03F5  00F1               	movwf	disp_success@breg
  1733  03F6                     l1119:
  1734                           
  1735                           ;main.c: 147: uint8_t i;;main.c: 149: for (i = 0; i < 4; ++i)
  1736  03F6  01F2               	clrf	disp_success@i
  1737  03F7                     l1125:
  1738                           
  1739                           ;main.c: 150: {;main.c: 151: *breg = 0xFF;
  1740  03F7  30FF               	movlw	255
  1741  03F8  00F0               	movwf	??_disp_success
  1742  03F9  0871               	movf	disp_success@breg,w
  1743  03FA  0084               	movwf	4
  1744  03FB  0870               	movf	??_disp_success,w
  1745  03FC  1383               	bcf	3,7	;select IRP bank0
  1746  03FD  0080               	movwf	0
  1747  03FE                     l1127:
  1748                           
  1749                           ;main.c: 152: breg++;
  1750  03FE  3001               	movlw	1
  1751  03FF  00F0               	movwf	??_disp_success
  1752  0400  0870               	movf	??_disp_success,w
  1753  0401  07F1               	addwf	disp_success@breg,f
  1754  0402                     l1129:
  1755  0402  3001               	movlw	1
  1756  0403  00F0               	movwf	??_disp_success
  1757  0404  0870               	movf	??_disp_success,w
  1758  0405  07F2               	addwf	disp_success@i,f
  1759  0406                     l1131:
  1760  0406  3004               	movlw	4
  1761  0407  0272               	subwf	disp_success@i,w
  1762  0408  1C03               	skipc
  1763  0409  2C0B               	goto	u531
  1764  040A  2C0C               	goto	u530
  1765  040B                     u531:
  1766  040B  2BF7               	goto	l1125
  1767  040C                     u530:
  1768  040C                     l73:
  1769  040C  0008               	return
  1770  040D                     __end_of_disp_success:
  1771                           
  1772                           	psect	text6
  1773  03DD                     __ptext6:	
  1774 ;; *************** function _disp_error *****************
  1775 ;; Defined at:
  1776 ;;		line 158 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  breg            1    wreg     PTR unsigned char 
  1779 ;;		 -> main@bus_register(4), 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  breg            1    1[COMMON] PTR unsigned char 
  1782 ;;		 -> main@bus_register(4), 
  1783 ;;  i               1    2[COMMON] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         0       0       0       0       0
  1794 ;;      Locals:         2       0       0       0       0
  1795 ;;      Temps:          1       0       0       0       0
  1796 ;;      Totals:         3       0       0       0       0
  1797 ;;Total ram usage:        3 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_chk_passwd
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function _disp_error
  1808  03DD                     _disp_error:
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _disp_error: [wreg-fsr0h+status,2+status,0]
  1812                           ;disp_error@breg stored from wreg
  1813  03DD  00F1               	movwf	disp_error@breg
  1814  03DE                     l1133:
  1815                           
  1816                           ;main.c: 160: uint8_t i;;main.c: 162: for (i = 0; i < 4; ++i)
  1817  03DE  01F2               	clrf	disp_error@i
  1818  03DF                     l1139:
  1819                           
  1820                           ;main.c: 163: {;main.c: 164: *breg = 0xF7;
  1821  03DF  30F7               	movlw	247
  1822  03E0  00F0               	movwf	??_disp_error
  1823  03E1  0871               	movf	disp_error@breg,w
  1824  03E2  0084               	movwf	4
  1825  03E3  0870               	movf	??_disp_error,w
  1826  03E4  1383               	bcf	3,7	;select IRP bank0
  1827  03E5  0080               	movwf	0
  1828  03E6                     l1141:
  1829                           
  1830                           ;main.c: 165: breg++;
  1831  03E6  3001               	movlw	1
  1832  03E7  00F0               	movwf	??_disp_error
  1833  03E8  0870               	movf	??_disp_error,w
  1834  03E9  07F1               	addwf	disp_error@breg,f
  1835  03EA                     l1143:
  1836  03EA  3001               	movlw	1
  1837  03EB  00F0               	movwf	??_disp_error
  1838  03EC  0870               	movf	??_disp_error,w
  1839  03ED  07F2               	addwf	disp_error@i,f
  1840  03EE                     l1145:
  1841  03EE  3004               	movlw	4
  1842  03EF  0272               	subwf	disp_error@i,w
  1843  03F0  1C03               	skipc
  1844  03F1  2BF3               	goto	u541
  1845  03F2  2BF4               	goto	u540
  1846  03F3                     u541:
  1847  03F3  2BDF               	goto	l1139
  1848  03F4                     u540:
  1849  03F4                     l78:
  1850  03F4  0008               	return
  1851  03F5                     __end_of_disp_error:
  1852                           
  1853                           	psect	text7
  1854  068F                     __ptext7:	
  1855 ;; *************** function _bcd_output *****************
  1856 ;; Defined at:
  1857 ;;		line 294 in file "main.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  value           1    wreg     PTR unsigned char 
  1860 ;;		 -> main@bus_register(4), 
  1861 ;;  cwait           1    1[COMMON] unsigned char 
  1862 ;;  preg            1    2[COMMON] unsigned char 
  1863 ;;  pit             1    3[COMMON] unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  value           1   34[BANK0 ] PTR unsigned char 
  1866 ;;		 -> main@bus_register(4), 
  1867 ;;  num_pass_7se   12   12[BANK0 ] unsigned char [12]
  1868 ;;  num_bcd_7seg   12    0[BANK0 ] unsigned char [12]
  1869 ;;  aux_bus         4   28[BANK0 ] unsigned char [4]
  1870 ;;  num_erro_7se    4   24[BANK0 ] unsigned char [4]
  1871 ;;  sbus            2   35[BANK0 ] unsigned int 
  1872 ;;  pdisp           1   39[BANK0 ] unsigned char 
  1873 ;;  li              1   38[BANK0 ] unsigned char 
  1874 ;;  t               1   37[BANK0 ] unsigned char 
  1875 ;;  pr              1   33[BANK0 ] unsigned char 
  1876 ;;  func            1   32[BANK0 ] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         3       0       0       0       0
  1887 ;;      Locals:         0      40       0       0       0
  1888 ;;      Temps:          4       0       0       0       0
  1889 ;;      Totals:         7      40       0       0       0
  1890 ;;Total ram usage:       47 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    1
  1893 ;; This function calls:
  1894 ;;		_cdisplay
  1895 ;;		_mux_display
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _bcd_output
  1903  068F                     _bcd_output:
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _bcd_output: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1907                           ;bcd_output@value stored from wreg
  1908  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0691  00C2               	movwf	bcd_output@value
  1911  0692                     l1175:
  1912                           
  1913                           ;main.c: 296: uint8_t pdisp;;main.c: 297: uint16_t sbus;;main.c: 298: uint8_t func = *va
      +                          lue;
  1914  0692  0842               	movf	bcd_output@value,w
  1915  0693  0084               	movwf	4
  1916  0694  1383               	bcf	3,7	;select IRP bank0
  1917  0695  0800               	movf	0,w
  1918  0696  00F4               	movwf	??_bcd_output
  1919  0697  0874               	movf	??_bcd_output,w
  1920  0698  00C0               	movwf	bcd_output@func
  1921                           
  1922                           ;main.c: 305: uint8_t num_bcd_7seg[] = { 0x01, 0x4F, 0x12, 0x06, 0x4C, 0x24, 0x20, 0x0F,
      +                          ;main.c: 306: 0x00, 0x04, 0xFE, 0x7E };
  1923  0699  3020               	movlw	bcd_output@num_bcd_7seg& (0+255)
  1924  069A  0084               	movwf	4
  1925  069B  30AC               	movlw	low bcd_output@F1362
  1926  069C  00F4               	movwf	??_bcd_output
  1927  069D  0804               	movf	4,w
  1928  069E  00F5               	movwf	??_bcd_output+1
  1929  069F  300C               	movlw	12
  1930  06A0  00F6               	movwf	??_bcd_output+2
  1931  06A1                     u570:
  1932  06A1  0874               	movf	??_bcd_output,w
  1933  06A2  0084               	movwf	4
  1934  06A3  1383               	bcf	3,7	;select IRP bank1
  1935  06A4  0800               	movf	0,w
  1936  06A5  00F7               	movwf	??_bcd_output+3
  1937  06A6  0AF4               	incf	??_bcd_output,f
  1938  06A7  0875               	movf	??_bcd_output+1,w
  1939  06A8  0084               	movwf	4
  1940  06A9  0877               	movf	??_bcd_output+3,w
  1941  06AA  0080               	movwf	0
  1942  06AB  0AF5               	incf	??_bcd_output+1,f
  1943  06AC  0BF6               	decfsz	??_bcd_output+2,f
  1944  06AD  2EA1               	goto	u570
  1945                           
  1946                           ;main.c: 307: uint8_t num_pass_7seg[] = { 0x18, 0x4F, 0x31, 0x4F, 0x20, 0x38, 0x00, 0x00
      +                          ,;main.c: 308: 0x0F, 0x7F, 0x7F, 0x7F };
  1947  06AE  302C               	movlw	bcd_output@num_pass_7seg& (0+255)
  1948  06AF  0084               	movwf	4
  1949  06B0  30A0               	movlw	low bcd_output@F1364
  1950  06B1  00F4               	movwf	??_bcd_output
  1951  06B2  0804               	movf	4,w
  1952  06B3  00F5               	movwf	??_bcd_output+1
  1953  06B4  300C               	movlw	12
  1954  06B5  00F6               	movwf	??_bcd_output+2
  1955  06B6                     u580:
  1956  06B6  0874               	movf	??_bcd_output,w
  1957  06B7  0084               	movwf	4
  1958  06B8  1383               	bcf	3,7	;select IRP bank1
  1959  06B9  0800               	movf	0,w
  1960  06BA  00F7               	movwf	??_bcd_output+3
  1961  06BB  0AF4               	incf	??_bcd_output,f
  1962  06BC  0875               	movf	??_bcd_output+1,w
  1963  06BD  0084               	movwf	4
  1964  06BE  0877               	movf	??_bcd_output+3,w
  1965  06BF  0080               	movwf	0
  1966  06C0  0AF5               	incf	??_bcd_output+1,f
  1967  06C1  0BF6               	decfsz	??_bcd_output+2,f
  1968  06C2  2EB6               	goto	u580
  1969  06C3                     l1177:
  1970                           
  1971                           ;main.c: 309: uint8_t num_erro_7seg[] = { 0x01, 0x7A, 0x7A, 0x30 };
  1972  06C3  085F               	movf	bcd_output@F1366+3,w
  1973  06C4  00BB               	movwf	bcd_output@num_erro_7seg+3
  1974  06C5  085E               	movf	bcd_output@F1366+2,w
  1975  06C6  00BA               	movwf	bcd_output@num_erro_7seg+2
  1976  06C7  085D               	movf	bcd_output@F1366+1,w
  1977  06C8  00B9               	movwf	bcd_output@num_erro_7seg+1
  1978  06C9  085C               	movf	bcd_output@F1366,w
  1979  06CA  00B8               	movwf	bcd_output@num_erro_7seg
  1980  06CB                     l1179:
  1981                           
  1982                           ;main.c: 310: uint8_t aux_bus[4] = { 0x18, 0x7F, 0x7F, 0x7F };
  1983  06CB  085B               	movf	bcd_output@F1368+3,w
  1984  06CC  00BF               	movwf	bcd_output@aux_bus+3
  1985  06CD  085A               	movf	bcd_output@F1368+2,w
  1986  06CE  00BE               	movwf	bcd_output@aux_bus+2
  1987  06CF  0859               	movf	bcd_output@F1368+1,w
  1988  06D0  00BD               	movwf	bcd_output@aux_bus+1
  1989  06D1  0858               	movf	bcd_output@F1368,w
  1990  06D2  00BC               	movwf	bcd_output@aux_bus
  1991  06D3                     l1181:
  1992                           
  1993                           ;main.c: 312: uint8_t t;;main.c: 313: uint8_t pr = 0;
  1994  06D3  01C1               	clrf	bcd_output@pr
  1995  06D4                     l1183:
  1996                           
  1997                           ;main.c: 314: uint8_t li = 0;
  1998  06D4  01C6               	clrf	bcd_output@li
  1999                           
  2000                           ;main.c: 320: switch(func) {
  2001  06D5  2FD8               	goto	l1303
  2002  06D6                     l1185:
  2003                           
  2004                           ;main.c: 325: for (sbus = 0; sbus < 100*12; ++sbus) {
  2005  06D6  01C3               	clrf	bcd_output@sbus
  2006  06D7  01C4               	clrf	bcd_output@sbus+1
  2007  06D8                     l133:
  2008                           
  2009                           ;main.c: 326: if (PORTCbits.RC3 == 1) break;
  2010  06D8  1D87               	btfss	7,3	;volatile
  2011  06D9  2EDB               	goto	u591
  2012  06DA  2EDC               	goto	u590
  2013  06DB                     u591:
  2014  06DB  2EDD               	goto	l1193
  2015  06DC                     u590:
  2016  06DC  2FE0               	goto	l154
  2017  06DD                     l1193:
  2018                           
  2019                           ;main.c: 331: if (pr > 100) {
  2020  06DD  3065               	movlw	101
  2021  06DE  0241               	subwf	bcd_output@pr,w
  2022  06DF  1C03               	skipc
  2023  06E0  2EE2               	goto	u601
  2024  06E1  2EE3               	goto	u600
  2025  06E2                     u601:
  2026  06E2  2F0D               	goto	l1215
  2027  06E3                     u600:
  2028  06E3                     l1195:
  2029                           
  2030                           ;main.c: 332: li++;
  2031  06E3  3001               	movlw	1
  2032  06E4  00F4               	movwf	??_bcd_output
  2033  06E5  0874               	movf	??_bcd_output,w
  2034  06E6  07C6               	addwf	bcd_output@li,f
  2035  06E7                     l1197:
  2036                           
  2037                           ;main.c: 333: if (li >= 12) li = 0;
  2038  06E7  300C               	movlw	12
  2039  06E8  0246               	subwf	bcd_output@li,w
  2040  06E9  1C03               	skipc
  2041  06EA  2EEC               	goto	u611
  2042  06EB  2EED               	goto	u610
  2043  06EC                     u611:
  2044  06EC  2EEE               	goto	l137
  2045  06ED                     u610:
  2046  06ED                     l1199:
  2047  06ED  01C6               	clrf	bcd_output@li
  2048  06EE                     l137:
  2049                           
  2050                           ;main.c: 334: pr = 0;
  2051  06EE  01C1               	clrf	bcd_output@pr
  2052  06EF                     l1201:
  2053                           
  2054                           ;main.c: 336: for (t = 3; t >= 1; --t) {
  2055  06EF  3003               	movlw	3
  2056  06F0  00F4               	movwf	??_bcd_output
  2057  06F1  0874               	movf	??_bcd_output,w
  2058  06F2  00C5               	movwf	bcd_output@t
  2059  06F3                     l1207:
  2060                           
  2061                           ;main.c: 337: aux_bus[t] = aux_bus[t - 1U];
  2062  06F3  0845               	movf	bcd_output@t,w
  2063  06F4  3EFF               	addlw	255
  2064  06F5  3E3C               	addlw	(low (bcd_output@aux_bus| 0))& (0+255)
  2065  06F6  0084               	movwf	4
  2066  06F7  1383               	bcf	3,7	;select IRP bank0
  2067  06F8  0800               	movf	0,w
  2068  06F9  00F4               	movwf	??_bcd_output
  2069  06FA  0845               	movf	bcd_output@t,w
  2070  06FB  3E3C               	addlw	(low (bcd_output@aux_bus| 0))& (0+255)
  2071  06FC  0084               	movwf	4
  2072  06FD  0874               	movf	??_bcd_output,w
  2073  06FE  0080               	movwf	0
  2074  06FF                     l1209:
  2075  06FF  3001               	movlw	1
  2076  0700  02C5               	subwf	bcd_output@t,f
  2077  0701                     l1211:
  2078  0701  0845               	movf	bcd_output@t,w
  2079  0702  1D03               	btfss	3,2
  2080  0703  2F05               	goto	u621
  2081  0704  2F06               	goto	u620
  2082  0705                     u621:
  2083  0705  2EF3               	goto	l1207
  2084  0706                     u620:
  2085  0706                     l1213:
  2086                           
  2087                           ;main.c: 338: };main.c: 339: aux_bus[0] = num_pass_7seg[li];
  2088  0706  0846               	movf	bcd_output@li,w
  2089  0707  3E2C               	addlw	(low (bcd_output@num_pass_7seg| 0))& (0+255)
  2090  0708  0084               	movwf	4
  2091  0709  0800               	movf	0,w
  2092  070A  00F4               	movwf	??_bcd_output
  2093  070B  0874               	movf	??_bcd_output,w
  2094  070C  00BC               	movwf	bcd_output@aux_bus
  2095  070D                     l1215:
  2096                           
  2097                           ;main.c: 340: };main.c: 343: for (pdisp = 0; pdisp < 4; ++pdisp) {
  2098  070D  01C7               	clrf	bcd_output@pdisp
  2099  070E                     l1221:
  2100                           
  2101                           ;main.c: 344: PORTB = aux_bus[pdisp];
  2102  070E  0847               	movf	bcd_output@pdisp,w
  2103  070F  3E3C               	addlw	(low (bcd_output@aux_bus| 0))& (0+255)
  2104  0710  0084               	movwf	4
  2105  0711  1383               	bcf	3,7	;select IRP bank0
  2106  0712  0800               	movf	0,w
  2107  0713  0086               	movwf	6	;volatile
  2108  0714                     l1223:
  2109                           
  2110                           ;main.c: 345: mux_display(pdisp);
  2111  0714  0847               	movf	bcd_output@pdisp,w
  2112  0715  120A  118A  245B  120A  118A  	fcall	_mux_display
  2113  071A                     l1225:
  2114                           
  2115                           ;main.c: 346: _delay((unsigned long)((800)*(20000000/4000000.0)));
  2116  071A  3006               	movlw	6
  2117  071B  00F5               	movwf	??_bcd_output+1
  2118  071C  3030               	movlw	48
  2119  071D  00F4               	movwf	??_bcd_output
  2120  071E                     u1107:
  2121  071E  0BF4               	decfsz	??_bcd_output,f
  2122  071F  2F1E               	goto	u1107
  2123  0720  0BF5               	decfsz	??_bcd_output+1,f
  2124  0721  2F1E               	goto	u1107
  2125  0722  0000               	nop
  2126  0723                     l1227:
  2127  0723  3001               	movlw	1
  2128  0724  00F4               	movwf	??_bcd_output
  2129  0725  0874               	movf	??_bcd_output,w
  2130  0726  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0727  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0728  07C7               	addwf	bcd_output@pdisp,f
  2133  0729                     l1229:
  2134  0729  3004               	movlw	4
  2135  072A  0247               	subwf	bcd_output@pdisp,w
  2136  072B  1C03               	skipc
  2137  072C  2F2E               	goto	u631
  2138  072D  2F2F               	goto	u630
  2139  072E                     u631:
  2140  072E  2F0E               	goto	l1221
  2141  072F                     u630:
  2142  072F                     l1231:
  2143                           
  2144                           ;main.c: 347: };main.c: 348: pr++;
  2145  072F  3001               	movlw	1
  2146  0730  00F4               	movwf	??_bcd_output
  2147  0731  0874               	movf	??_bcd_output,w
  2148  0732  07C1               	addwf	bcd_output@pr,f
  2149  0733                     l1233:
  2150  0733  3001               	movlw	1
  2151  0734  07C3               	addwf	bcd_output@sbus,f
  2152  0735  1803               	skipnc
  2153  0736  0AC4               	incf	bcd_output@sbus+1,f
  2154  0737  3000               	movlw	0
  2155  0738  07C4               	addwf	bcd_output@sbus+1,f
  2156  0739                     l1235:
  2157  0739  3004               	movlw	4
  2158  073A  0244               	subwf	bcd_output@sbus+1,w
  2159  073B  30B0               	movlw	176
  2160  073C  1903               	skipnz
  2161  073D  0243               	subwf	bcd_output@sbus,w
  2162  073E  1C03               	skipc
  2163  073F  2F41               	goto	u641
  2164  0740  2F42               	goto	u640
  2165  0741                     u641:
  2166  0741  2ED8               	goto	l133
  2167  0742                     u640:
  2168  0742  2FE0               	goto	l154
  2169  0743                     l1237:
  2170                           
  2171                           ;main.c: 357: for (li = 0; li < 2; ++li) {
  2172  0743  01C6               	clrf	bcd_output@li
  2173  0744                     l1243:
  2174                           
  2175                           ;main.c: 360: for (pdisp = 0; pdisp < 4; ++pdisp) {
  2176  0744  01C7               	clrf	bcd_output@pdisp
  2177  0745                     l1249:
  2178                           
  2179                           ;main.c: 361: mux_display(pdisp);
  2180  0745  0847               	movf	bcd_output@pdisp,w
  2181  0746  120A  118A  245B  120A  118A  	fcall	_mux_display
  2182  074B                     l1251:
  2183                           
  2184                           ;main.c: 362: PORTB = num_erro_7seg[pdisp];
  2185  074B  1283               	bcf	3,5	;RP0=0, select bank0
  2186  074C  1303               	bcf	3,6	;RP1=0, select bank0
  2187  074D  0847               	movf	bcd_output@pdisp,w
  2188  074E  3E38               	addlw	(low (bcd_output@num_erro_7seg| 0))& (0+255)
  2189  074F  0084               	movwf	4
  2190  0750  1383               	bcf	3,7	;select IRP bank0
  2191  0751  0800               	movf	0,w
  2192  0752  0086               	movwf	6	;volatile
  2193  0753                     l1253:
  2194                           
  2195                           ;main.c: 363: sbus++;
  2196  0753  3001               	movlw	1
  2197  0754  07C3               	addwf	bcd_output@sbus,f
  2198  0755  1803               	skipnc
  2199  0756  0AC4               	incf	bcd_output@sbus+1,f
  2200  0757  3000               	movlw	0
  2201  0758  07C4               	addwf	bcd_output@sbus+1,f
  2202  0759                     l1255:
  2203                           
  2204                           ;main.c: 364: _delay((unsigned long)((500)*(20000000/4000000.0)));
  2205  0759  3004               	movlw	4
  2206  075A  00F5               	movwf	??_bcd_output+1
  2207  075B  303D               	movlw	61
  2208  075C  00F4               	movwf	??_bcd_output
  2209  075D                     u1117:
  2210  075D  0BF4               	decfsz	??_bcd_output,f
  2211  075E  2F5D               	goto	u1117
  2212  075F  0BF5               	decfsz	??_bcd_output+1,f
  2213  0760  2F5D               	goto	u1117
  2214  0761  2F62               	nop2
  2215  0762                     l1257:
  2216  0762  3001               	movlw	1
  2217  0763  00F4               	movwf	??_bcd_output
  2218  0764  0874               	movf	??_bcd_output,w
  2219  0765  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0766  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0767  07C7               	addwf	bcd_output@pdisp,f
  2222  0768                     l1259:
  2223  0768  3004               	movlw	4
  2224  0769  0247               	subwf	bcd_output@pdisp,w
  2225  076A  1C03               	skipc
  2226  076B  2F6D               	goto	u651
  2227  076C  2F6E               	goto	u650
  2228  076D                     u651:
  2229  076D  2F45               	goto	l1249
  2230  076E                     u650:
  2231  076E                     l1261:
  2232                           
  2233                           ;main.c: 365: };main.c: 369: if (sbus > 500) {
  2234  076E  3001               	movlw	1
  2235  076F  0244               	subwf	bcd_output@sbus+1,w
  2236  0770  30F5               	movlw	245
  2237  0771  1903               	skipnz
  2238  0772  0243               	subwf	bcd_output@sbus,w
  2239  0773  1C03               	skipc
  2240  0774  2F76               	goto	u661
  2241  0775  2F77               	goto	u660
  2242  0776                     u661:
  2243  0776  2F8F               	goto	l1271
  2244  0777                     u660:
  2245  0777                     l1263:
  2246                           
  2247                           ;main.c: 370: PORTB = 0x7F;
  2248  0777  307F               	movlw	127
  2249  0778  0086               	movwf	6	;volatile
  2250  0779                     l1265:
  2251                           
  2252                           ;main.c: 371: cdisplay();
  2253  0779  120A  118A  23B3  120A  118A  	fcall	_cdisplay
  2254  077E                     l1267:
  2255                           
  2256                           ;main.c: 372: _delay((unsigned long)((500)*(20000000/4000.0)));
  2257  077E  300D               	movlw	13
  2258  077F  00F6               	movwf	??_bcd_output+2
  2259  0780  30AF               	movlw	175
  2260  0781  00F5               	movwf	??_bcd_output+1
  2261  0782  30B6               	movlw	182
  2262  0783  00F4               	movwf	??_bcd_output
  2263  0784                     u1127:
  2264  0784  0BF4               	decfsz	??_bcd_output,f
  2265  0785  2F84               	goto	u1127
  2266  0786  0BF5               	decfsz	??_bcd_output+1,f
  2267  0787  2F84               	goto	u1127
  2268  0788  0BF6               	decfsz	??_bcd_output+2,f
  2269  0789  2F84               	goto	u1127
  2270  078A  0000               	nop
  2271  078B                     l1269:
  2272                           
  2273                           ;main.c: 373: sbus = 0;
  2274  078B  1283               	bcf	3,5	;RP0=0, select bank0
  2275  078C  1303               	bcf	3,6	;RP1=0, select bank0
  2276  078D  01C3               	clrf	bcd_output@sbus
  2277  078E  01C4               	clrf	bcd_output@sbus+1
  2278  078F                     l1271:
  2279  078F  3001               	movlw	1
  2280  0790  00F4               	movwf	??_bcd_output
  2281  0791  0874               	movf	??_bcd_output,w
  2282  0792  07C6               	addwf	bcd_output@li,f
  2283  0793                     l1273:
  2284  0793  3002               	movlw	2
  2285  0794  0246               	subwf	bcd_output@li,w
  2286  0795  1C03               	skipc
  2287  0796  2F98               	goto	u671
  2288  0797  2F99               	goto	u670
  2289  0798                     u671:
  2290  0798  2F44               	goto	l1243
  2291  0799                     u670:
  2292  0799  2FE0               	goto	l154
  2293  079A                     l1275:
  2294                           
  2295                           ;main.c: 383: for (pdisp = 0; pdisp < 4; ++pdisp) {
  2296  079A  01C7               	clrf	bcd_output@pdisp
  2297  079B                     l1281:
  2298                           
  2299                           ;main.c: 385: PORTB = num_bcd_7seg[*value];
  2300  079B  0842               	movf	bcd_output@value,w
  2301  079C  0084               	movwf	4
  2302  079D  1383               	bcf	3,7	;select IRP bank0
  2303  079E  0800               	movf	0,w
  2304  079F  3E20               	addlw	(low (bcd_output@num_bcd_7seg| 0))& (0+255)
  2305  07A0  0084               	movwf	4
  2306  07A1  0800               	movf	0,w
  2307  07A2  0086               	movwf	6	;volatile
  2308  07A3                     l1283:
  2309                           
  2310                           ;main.c: 388: *value++;
  2311  07A3  3001               	movlw	1
  2312  07A4  00F4               	movwf	??_bcd_output
  2313  07A5  0874               	movf	??_bcd_output,w
  2314  07A6  07C2               	addwf	bcd_output@value,f
  2315  07A7                     l1285:
  2316                           
  2317                           ;main.c: 393: if (cwait < (pit / 2U) && preg == pdisp) {
  2318  07A7  0873               	movf	bcd_output@pit,w
  2319  07A8  00F4               	movwf	??_bcd_output
  2320  07A9  1003               	clrc
  2321  07AA  0C74               	rrf	??_bcd_output,w
  2322  07AB  0271               	subwf	bcd_output@cwait,w
  2323  07AC  1803               	skipnc
  2324  07AD  2FAF               	goto	u681
  2325  07AE  2FB0               	goto	u680
  2326  07AF                     u681:
  2327  07AF  2FB7               	goto	l1291
  2328  07B0                     u680:
  2329  07B0                     l1287:
  2330  07B0  0872               	movf	bcd_output@preg,w
  2331  07B1  0647               	xorwf	bcd_output@pdisp,w
  2332  07B2  1D03               	skipz
  2333  07B3  2FB5               	goto	u691
  2334  07B4  2FB6               	goto	u690
  2335  07B5                     u691:
  2336  07B5  2FB7               	goto	l1291
  2337  07B6                     u690:
  2338  07B6  2FBD               	goto	l1293
  2339  07B7                     l1291:
  2340                           
  2341                           ;main.c: 395: };main.c: 397: mux_display(pdisp);
  2342  07B7  0847               	movf	bcd_output@pdisp,w
  2343  07B8  120A  118A  245B  120A  118A  	fcall	_mux_display
  2344  07BD                     l1293:
  2345                           
  2346                           ;main.c: 400: _delay((unsigned long)((500)*(20000000/4000000.0)));
  2347  07BD  3004               	movlw	4
  2348  07BE  00F5               	movwf	??_bcd_output+1
  2349  07BF  303D               	movlw	61
  2350  07C0  00F4               	movwf	??_bcd_output
  2351  07C1                     u1137:
  2352  07C1  0BF4               	decfsz	??_bcd_output,f
  2353  07C2  2FC1               	goto	u1137
  2354  07C3  0BF5               	decfsz	??_bcd_output+1,f
  2355  07C4  2FC1               	goto	u1137
  2356  07C5  2FC6               	nop2
  2357  07C6                     l1295:
  2358                           
  2359                           ;main.c: 401: cdisplay();
  2360  07C6  120A  118A  23B3  120A  118A  	fcall	_cdisplay
  2361  07CB                     l1297:
  2362  07CB  3001               	movlw	1
  2363  07CC  00F4               	movwf	??_bcd_output
  2364  07CD  0874               	movf	??_bcd_output,w
  2365  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2366  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2367  07D0  07C7               	addwf	bcd_output@pdisp,f
  2368  07D1                     l1299:
  2369  07D1  3004               	movlw	4
  2370  07D2  0247               	subwf	bcd_output@pdisp,w
  2371  07D3  1C03               	skipc
  2372  07D4  2FD6               	goto	u701
  2373  07D5  2FD7               	goto	u700
  2374  07D6                     u701:
  2375  07D6  2F9B               	goto	l1281
  2376  07D7                     u700:
  2377  07D7  2FE0               	goto	l154
  2378  07D8                     l1303:
  2379  07D8  0840               	movf	bcd_output@func,w
  2380                           
  2381                           ; Switch size 1, requested type "simple"
  2382                           ; Number of cases is 2, Range of values is 247 to 255
  2383                           ; switch strategies available:
  2384                           ; Name         Instructions Cycles
  2385                           ; simple_byte            7     4 (average)
  2386                           ; direct_byte           34     7 (fixed)
  2387                           ; jumptable            263     9 (fixed)
  2388                           ;	Chosen strategy is simple_byte
  2389  07D9  3AF7               	xorlw	247	; case 247
  2390  07DA  1903               	skipnz
  2391  07DB  2F43               	goto	l1237
  2392  07DC  3A08               	xorlw	8	; case 255
  2393  07DD  1903               	skipnz
  2394  07DE  2ED6               	goto	l1185
  2395  07DF  2F9A               	goto	l1275
  2396  07E0                     l154:
  2397  07E0  0008               	return
  2398  07E1                     __end_of_bcd_output:
  2399                           
  2400                           	psect	text8
  2401  045B                     __ptext8:	
  2402 ;; *************** function _mux_display *****************
  2403 ;; Defined at:
  2404 ;;		line 409 in file "main.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  pdisp           1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  pdisp           1    0[COMMON] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       0       0       0       0
  2419 ;;      Locals:         1       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         1       0       0       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_bcd_output
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function _mux_display
  2433  045B                     _mux_display:
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _mux_display: [wreg-fsr0h+status,2+status,0]
  2437                           ;mux_display@pdisp stored from wreg
  2438  045B  00F0               	movwf	mux_display@pdisp
  2439  045C                     l1169:
  2440                           
  2441                           ;main.c: 410: switch ( pdisp ) {
  2442  045C  2C79               	goto	l1173
  2443  045D                     l158:	
  2444                           ;main.c: 411: case 0:
  2445                           
  2446                           
  2447                           ;main.c: 412: PORTDbits.RD4 = 0;
  2448  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2449  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2450  045F  1208               	bcf	8,4	;volatile
  2451                           
  2452                           ;main.c: 413: PORTDbits.RD5 = 1;
  2453  0460  1688               	bsf	8,5	;volatile
  2454                           
  2455                           ;main.c: 414: PORTDbits.RD6 = 1;
  2456  0461  1708               	bsf	8,6	;volatile
  2457                           
  2458                           ;main.c: 415: PORTDbits.RD7 = 1;
  2459  0462  1788               	bsf	8,7	;volatile
  2460                           
  2461                           ;main.c: 416: break;
  2462  0463  2C87               	goto	l163
  2463  0464                     l160:	
  2464                           ;main.c: 417: case 1:
  2465                           
  2466                           
  2467                           ;main.c: 418: PORTDbits.RD4 = 1;
  2468  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0466  1608               	bsf	8,4	;volatile
  2471                           
  2472                           ;main.c: 419: PORTDbits.RD5 = 0;
  2473  0467  1288               	bcf	8,5	;volatile
  2474                           
  2475                           ;main.c: 420: PORTDbits.RD6 = 1;
  2476  0468  1708               	bsf	8,6	;volatile
  2477                           
  2478                           ;main.c: 421: PORTDbits.RD7 = 1;
  2479  0469  1788               	bsf	8,7	;volatile
  2480                           
  2481                           ;main.c: 422: break;
  2482  046A  2C87               	goto	l163
  2483  046B                     l161:	
  2484                           ;main.c: 423: case 2:
  2485                           
  2486                           
  2487                           ;main.c: 424: PORTDbits.RD4 = 1;
  2488  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2489  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2490  046D  1608               	bsf	8,4	;volatile
  2491                           
  2492                           ;main.c: 425: PORTDbits.RD5 = 1;
  2493  046E  1688               	bsf	8,5	;volatile
  2494                           
  2495                           ;main.c: 426: PORTDbits.RD6 = 0;
  2496  046F  1308               	bcf	8,6	;volatile
  2497                           
  2498                           ;main.c: 427: PORTDbits.RD7 = 1;
  2499  0470  1788               	bsf	8,7	;volatile
  2500                           
  2501                           ;main.c: 428: break;
  2502  0471  2C87               	goto	l163
  2503  0472                     l162:	
  2504                           ;main.c: 429: case 3:
  2505                           
  2506                           
  2507                           ;main.c: 430: PORTDbits.RD4 = 1;
  2508  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0474  1608               	bsf	8,4	;volatile
  2511                           
  2512                           ;main.c: 431: PORTDbits.RD5 = 1;
  2513  0475  1688               	bsf	8,5	;volatile
  2514                           
  2515                           ;main.c: 432: PORTDbits.RD6 = 1;
  2516  0476  1708               	bsf	8,6	;volatile
  2517                           
  2518                           ;main.c: 433: PORTDbits.RD7 = 0;
  2519  0477  1388               	bcf	8,7	;volatile
  2520                           
  2521                           ;main.c: 434: break;
  2522  0478  2C87               	goto	l163
  2523  0479                     l1173:
  2524  0479  0870               	movf	mux_display@pdisp,w
  2525                           
  2526                           ; Switch size 1, requested type "simple"
  2527                           ; Number of cases is 4, Range of values is 0 to 3
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte           13     7 (average)
  2531                           ; direct_byte           20     8 (fixed)
  2532                           ; jumptable            260     6 (fixed)
  2533                           ;	Chosen strategy is simple_byte
  2534  047A  3A00               	xorlw	0	; case 0
  2535  047B  1903               	skipnz
  2536  047C  2C5D               	goto	l158
  2537  047D  3A01               	xorlw	1	; case 1
  2538  047E  1903               	skipnz
  2539  047F  2C64               	goto	l160
  2540  0480  3A03               	xorlw	3	; case 2
  2541  0481  1903               	skipnz
  2542  0482  2C6B               	goto	l161
  2543  0483  3A01               	xorlw	1	; case 3
  2544  0484  1903               	skipnz
  2545  0485  2C72               	goto	l162
  2546  0486  2C87               	goto	l163
  2547  0487                     l163:
  2548  0487  0008               	return
  2549  0488                     __end_of_mux_display:
  2550                           
  2551                           	psect	text9
  2552  03B3                     __ptext9:	
  2553 ;; *************** function _cdisplay *****************
  2554 ;; Defined at:
  2555 ;;		line 277 in file "main.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		None
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_bcd_output
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _cdisplay
  2584  03B3                     _cdisplay:
  2585  03B3                     l1167:	
  2586                           ;incstack = 0
  2587                           ; Regs used in _cdisplay: []
  2588                           
  2589                           
  2590                           ;main.c: 279: PORTDbits.RD4 = 1;
  2591  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2592  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2593  03B5  1608               	bsf	8,4	;volatile
  2594                           
  2595                           ;main.c: 280: PORTDbits.RD5 = 1;
  2596  03B6  1688               	bsf	8,5	;volatile
  2597                           
  2598                           ;main.c: 281: PORTDbits.RD6 = 1;
  2599  03B7  1708               	bsf	8,6	;volatile
  2600                           
  2601                           ;main.c: 282: PORTDbits.RD7 = 1;
  2602  03B8  1788               	bsf	8,7	;volatile
  2603  03B9                     l120:
  2604  03B9  0008               	return
  2605  03BA                     __end_of_cdisplay:
  2606  007E                     btemp	set	126	;btemp
  2607  007E                     wtemp0	set	126
  2608                           
  2609                           	psect	config
  2610                           
  2611                           ;Config register CONFIG1 @ 0x2007
  2612                           ;	Oscillator Selection bits
  2613                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2614                           ;	Watchdog Timer Enable bit
  2615                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2616                           ;	Power-up Timer Enable bit
  2617                           ;	PWRTE = OFF, PWRT disabled
  2618                           ;	RE3/MCLR pin function select bit
  2619                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2620                           ;	Code Protection bit
  2621                           ;	CP = OFF, Program memory code protection is disabled
  2622                           ;	Data Code Protection bit
  2623                           ;	CPD = OFF, Data memory code protection is disabled
  2624                           ;	Brown Out Reset Selection bits
  2625                           ;	BOREN = ON, BOR enabled
  2626                           ;	Internal External Switchover bit
  2627                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2628                           ;	Fail-Safe Clock Monitor Enabled bit
  2629                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2630                           ;	Low Voltage Programming Enable bit
  2631                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  2632                           ;	In-Circuit Debugger Mode bit
  2633                           ;	DEBUG = 0x1, unprogrammed default
  2634  2007                     	org	8199
  2635  2007  3FF1               	dw	16369
  2636                           
  2637                           ;Config register CONFIG2 @ 0x2008
  2638                           ;	Brown-out Reset Selection bit
  2639                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2640                           ;	Flash Program Memory Self Write Enable bits
  2641                           ;	WRT = OFF, Write protection off
  2642  2008                     	org	8200
  2643  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     56      72
    BANK1            80      0      24
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    bcd_output@value	PTR unsigned char  size(1) Largest target is 4
		 -> main@bus_register(BANK0[4]), 

    iohandler@nreg	PTR unsigned char  size(1) Largest target is 1
		 -> main@nreg(BANK0[1]), 

    iohandler@preg	PTR unsigned char  size(1) Largest target is 1
		 -> main@preg(BANK0[1]), 

    iohandler@bus	PTR unsigned char  size(1) Largest target is 4
		 -> main@bus_register(BANK0[4]), 

    iohandler@flag	PTR unsigned char  size(1) Largest target is 1
		 -> main@flag(BANK0[1]), 

    clearreg@breg	PTR unsigned char  size(1) Largest target is 4
		 -> main@bus_register(BANK0[4]), 

    key_fwd@bus	PTR unsigned char  size(1) Largest target is 4
		 -> main@bus_register(BANK0[4]), 

    disp_error@breg	PTR unsigned char  size(1) Largest target is 4
		 -> main@bus_register(BANK0[4]), 

    disp_success@breg	PTR unsigned char  size(1) Largest target is 4
		 -> main@bus_register(BANK0[4]), 

    chk_passwd@preg	PTR unsigned char  size(1) Largest target is 1
		 -> main@preg(BANK0[1]), 

    chk_passwd@breg	PTR unsigned char  size(1) Largest target is 4
		 -> main@bus_register(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_chk_passwd
    _iohandler->_key_fwd
    _chk_passwd->_disp_error
    _chk_passwd->_disp_success
    _bcd_output->_mux_display

Critical Paths under _main in BANK0

    _main->_bcd_output

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    3422
                                             40 BANK0     16    16      0
                         _bcd_output
                         _chk_passwd
                          _iohandler
 ---------------------------------------------------------------------------------
 (1) _iohandler                                           12     9      3    1336
                                              4 COMMON     6     3      3
                                              0 BANK0      6     6      0
                           _clearreg
                            _key_fwd
 ---------------------------------------------------------------------------------
 (2) _key_fwd                                              4     3      1     241
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _clearreg                                             3     3      0     102
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _chk_passwd                                           9     8      1     515
                                              3 COMMON     9     8      1
                         _disp_error
                       _disp_success
 ---------------------------------------------------------------------------------
 (2) _disp_success                                         3     3      0     102
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _disp_error                                           3     3      0     102
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bcd_output                                          47    44      3    1109
                                              1 COMMON     7     4      3
                                              0 BANK0     40    40      0
                           _cdisplay
                        _mux_display
 ---------------------------------------------------------------------------------
 (2) _mux_display                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _cdisplay                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bcd_output
     _cdisplay
     _mux_display
   _chk_passwd
     _disp_error
     _disp_success
   _iohandler
     _clearreg
     _key_fwd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      18       7       30.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     38      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6C      12        0.0%
ABS                  0      0      6C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Nov 16 02:25:11 2020

                      pc 0002                       l51 054E                       l73 040C  
                     l83 045A                       l68 04C7                       l78 03F4  
                     l88 0424                       l97 05DB            ?_disp_success 0070  
                     fsr 0004                      l120 03B9                      l104 061E  
                    l133 06D8                      l117 068E                      l160 0464  
                    l161 046B                      l137 06EE                      l162 0472  
                    l154 07E0                      l163 0487                      l158 045D  
                    u600 06E3                      u601 06E2                      u610 06ED  
                    u530 040C                      u611 06EC                      u531 040B  
                    u700 07D7                      u620 0706                      u540 03F4  
                    u701 07D6                      u621 0705                      u541 03F3  
                    u630 072F                      u550 044A                      u710 0571  
                    u631 072E                      u551 0449                      u711 0570  
                    u640 0742                      u560 0424                      u800 05CE  
                    u720 0579                      u641 0741                      u561 0423  
                    u801 05CD                      u721 0578                      u650 076E  
                    u570 06A1                      u810 05D6                      u730 0583  
                    u651 076D                      u811 05D5                      u731 0582  
                    u660 0777                      u580 06B6                      u900 063D  
                    u820 05DF                      u740 059A                      u661 0776  
                    u901 063C                      u821 05DE                      u741 0599  
                    u670 0799                      u590 06DC                      u910 0656  
                    u830 05E7                      u750 05A2                      u671 0798  
                    u591 06DB                      u911 0655                      u831 05E6  
                    u751 05A1                      u680 07B0                      u920 065E  
                    u840 05F1                      u760 05AC                      u681 07AF  
                    u921 065D                      u841 05F0                      u761 05AB  
                    u690 07B6                      u930 0668                      u850 05FE  
                    u770 05C2                      u691 07B5                      u931 0667  
                    u851 05FD                      u771 05C1                      u940 0670  
                    u860 0614                      u780 05C6                      u941 066F  
                    u861 0613                      u781 05C5                      u950 04A5  
                    u870 0622                      u790 05CA                      u951 04A4  
                    u871 0621                      u791 05C9                      u960 04B0  
                    u880 062A                      u961 04AF                      u881 0629  
                    u970 04C3                      u890 0634                      u971 04C2  
                    u891 0633                      u980 051F                      u981 051E  
                    u990 0525                      u991 0524                      fsr0 0004  
                    indf 0000           chk_passwd@breg 007A           chk_passwd@preg 0073  
        chk_passwd@F1328 0060              disp_error@i 0072                     l1201 06EF  
                   l1211 0701                     l1131 0406                     l1221 070E  
                   l1213 0706                     l1141 03E6                     l1133 03DE  
                   l1125 03F7                     l1231 072F                     l1223 0714  
                   l1207 06F3                     l1215 070D                     l1303 07D8  
                   l1143 03EA                     l1127 03FE                     l1119 03F6  
                   l1151 0451                     l1311 057D                     l1233 0733  
                   l1225 071A                     l1209 06FF                     l1145 03EE  
                   l1129 0402                     l1161 0416                     l1153 040E  
                   l1321 05A2                     l1313 0583                     l1305 056D  
                   l1251 074B                     l1243 0744                     l1235 0739  
                   l1227 0723                     l1139 03DF                     l1163 041A  
                   l1147 043E                     l1403 0685                     l1331 05B9  
                   l1323 05A6                     l1315 0590                     l1307 0571  
                   l1173 0479                     l1261 076E                     l1253 0753  
                   l1237 0743                     l1229 0729                     l1181 06D3  
                   l1421 04B0                     l1413 0494                     l1405 0489  
                   l1165 041E                     l1149 044A                     l1341 05CE  
                   l1325 05AC                     l1333 05BC                     l1309 0579  
                   l1317 0594                     l1167 03B3                     l1263 0777  
                   l1271 078F                     l1255 0759                     l1183 06D4  
                   l1175 0692                     l1423 04B7                     l1407 0493  
                   l1159 040F                     l1351 05F1                     l1343 05D6  
                   l1335 05C2                     l1327 05B2                     l1319 059A  
                   l1431 04D3                     l1169 045C                     l1281 079B  
                   l1273 0793                     l1265 0779                     l1257 0762  
                   l1249 0745                     l1193 06DD                     l1185 06D6  
                   l1177 06C3                     l1425 04BD                     l1417 04A6  
                   l1361 060D                     l1345 05DF                     l1337 05C6  
                   l1329 05B6                     l1441 04DC                     l1433 04D6  
                   l1291 07B7                     l1283 07A3                     l1275 079A  
                   l1267 077E                     l1259 0768                     l1195 06E3  
                   l1179 06CB                     l1427 04C3                     l1419 04AA  
                   l1371 062A                     l1363 060F                     l1347 05E7  
                   l1339 05CA                     l1451 04E6                     l1443 04DD  
                   l1435 04D7                     l1293 07BD                     l1285 07A7  
                   l1269 078B                     l1197 06E7                     l1381 0649  
                   l1373 062E                     l1365 0614                     l1357 05F5  
                   l1349 05EB                     l1461 051F                     l1453 04E7  
                   l1445 04DE                     l1437 04DA                     l1429 04C8  
                   l1295 07C6                     l1287 07B0                     l1199 06ED  
                   l1391 0668                     l1375 0634                     l1383 0652  
                   l1367 061A                     l1359 05FE                     l1471 0540  
                   l1463 0525                     l1455 04F1                     l1447 04E4  
                   l1439 04DB                     _C1ON 083F                     l1297 07CB  
                   l1393 0670                     l1385 0656                     l1377 063D  
                   l1369 0622                     l1481 0562                     l1473 0544  
                   l1465 052F                     l1457 0503                     l1449 04E5  
                   l1299 07D1                     l1395 067A                     l1387 065E  
                   l1379 0647                     l1475 0547                     l1467 0535  
                   l1459 0517                     _C2ON 0847                     l1397 067E  
                   l1389 0662                     l1477 0558                     l1469 0536  
                   l1479 0560                     u1000 0535                     u1001 0534  
                   u1010 053D                     u1011 0539                     u1030 0544  
                   u1031 0543                     u1040 0558                     u1024 0540  
                   u1041 0557                     u1107 071E                     u1117 075D  
                   u1127 0784                     u1137 07C1                     u1057 057B  
                   u1067 05A4                     u1077 05E9                     u1087 062C  
                   u1097 0660                     _main 04C8                     btemp 007E  
                   start 0000           ??_disp_success 0070                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _TRISB 0086  
                  _TRISD 0088          __end_of_key_fwd 045B        bcd_output@aux_bus 003C  
                  pclath 000A         chk_passwd@passwd 0076                    status 0003  
                  wtemp0 007E          __initialization 07E1             __end_of_main 056A  
                 ??_main 0048              iohandler@pp 0025                   _ANSELH 0189  
          disp_success@i 0072         __end_of_cdisplay 03BA         __end_of_clearreg 0425  
          _iohandler$228 0020            _iohandler$229 0022                ??_key_fwd 0071  
   __end_of_disp_success 040D             ?_mux_display 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 03BA             __pidataBANK1 0425  
             _bcd_output 068F           disp_error@breg 0071       __size_of_iohandler 0125  
             _chk_passwd 0488               __pmaintext 04C8             iohandler@bus 0024  
              ?_cdisplay 0070                ?_clearreg 0070               _disp_error 03DD  
                __ptext1 056A                  __ptext2 043D                  __ptext3 040D  
                __ptext4 0488                  __ptext5 03F5                  __ptext6 03DD  
                __ptext7 068F                  __ptext8 045B                  __ptext9 03B3  
            ?_bcd_output 0071        __end_of_iohandler 068F                  _key_fwd 043D  
  __size_of_disp_success 0018               ??_cdisplay 0070         main@bus_register 004F  
             ??_clearreg 0070                  main@pit 0053             bcd_output@li 0046  
           bcd_output@pr 0041     end_of_initialization 07FC     __size_of_mux_display 002D  
            ?_chk_passwd 0073             _disp_success 03F5                _PORTCbits 0007  
              _PORTDbits 0008                _TRISCbits 0087                _TRISDbits 0088  
            ?_disp_error 0070          bcd_output@F1362 00AC          bcd_output@F1364 00A0  
        bcd_output@F1366 005C          bcd_output@F1368 0058      __size_of_bcd_output 0152  
        bcd_output@cwait 0071          bcd_output@pdisp 0047          bcd_output@value 0042  
       disp_success@breg 0071  bcd_output@num_erro_7seg 0038      start_initialization 07E1  
bcd_output@num_pass_7seg 002C      __size_of_chk_passwd 0040               key_fwd@bus 0073  
             key_fwd@pos 0070      __size_of_disp_error 0018               init_fetch0 03CA  
            __pdataBANK0 0058              __pdataBANK1 00A0                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_cdisplay 0007        __size_of_clearreg 0018  
           ??_bcd_output 0074            iohandler@flag 0076                 ?_key_fwd 0070  
          iohandler@nreg 0075            iohandler@preg 0074                _iohandler 056A  
            bcd_output@t 0045             ??_chk_passwd 0074                clearreg@i 0072  
     __end_of_bcd_output 07E1                main@F1323 0064   bcd_output@num_bcd_7seg 0020  
              main@ccall 0054           bcd_output@func 0040           bcd_output@preg 0072  
         bcd_output@sbus 0043             ??_disp_error 0070               ?_iohandler 0074  
     __end_of_chk_passwd 04C8            ??_mux_display 0070       __end_of_disp_error 03F5  
           clearreg@breg 0071         __size_of_key_fwd 001E                 _cdisplay 03B3  
               _main$192 004B                 _main$193 004D                 _clearreg 040D  
          __size_of_main 00A2      __end_of_mux_display 0488              chk_passwd@i 007B  
               main@flag 0056                 main@nreg 0055                 main@preg 0057  
          bcd_output@pit 0073              ??_iohandler 0077                 init_ram0 03CE  
       mux_display@pdisp 0070              _mux_display 045B  
